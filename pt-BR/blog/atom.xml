<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://docs.nanos.world/pt-BR/blog</id>
    <title>nanos world Blog</title>
    <updated>2021-11-15T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://docs.nanos.world/pt-BR/blog"/>
    <subtitle>nanos world Blog</subtitle>
    <icon>https://docs.nanos.world/pt-BR/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[November: Unreal Engine 5?]]></title>
        <id>november-2021</id>
        <link href="https://docs.nanos.world/pt-BR/blog/november-2021"/>
        <updated>2021-11-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[New Classes, Unreal Engine 5 Experiments and Scripting Improvements!]]></summary>
        <content type="html"><![CDATA[<p>New Classes, Unreal Engine 5 Experiments and Scripting Improvements!</p><h2>New Class: <a href="/docs/scripting-reference/classes/decal">Decal</a></h2><p><img src="/img/blog/november/decal.jpg"/></p><p>We&#x27;ve added a new class to spawning <strong>Decals</strong>! Decals are Materials that are projected onto meshes in your level, including Static Meshes and Skeletal Meshes. You can load any <code>.jpg</code> from disk during runtime and use it as parameter in your Decal Material!</p><p>As Decals are inherited from Actors, you can change it&#x27;s location, rotation, attach it or call any method from <a href="/docs/scripting-reference/classes/base-classes/actor">Base Actor</a> on it!</p><h2>New Class: <a href="/docs/scripting-reference/classes/billboard">Billboard</a></h2><p><img src="/img/blog/november/billboard.jpg"/></p><p>We&#x27;ve added another new class to spawning <strong>Billboards</strong>! A Billboard is a 2D Material that will be rendered always facing the camera. It&#x27;s possible to use all custom methods from Paintable as well and spawning custom textures on it. You can tweak it&#x27;s material properties with <a href="/docs/scripting-reference/classes/base-classes/paintable">Base Paintable</a> or even use a material of your own.</p><p>As Billboards are inherited from Actors, you can change it&#x27;s location, rotation, attach it or call any method from <a href="/docs/scripting-reference/classes/base-classes/actor">Base Actor</a> on it!</p><h2>New Class: <a href="/docs/scripting-reference/classes/melee">Melee</a></h2><p><img src="/img/blog/november/melee.jpg"/></p><p>We are getting a brand new very-requested class: <strong>Melee</strong>! The Melee is coming to replace the former <strong>Item</strong> class.</p><p><strong>Melee</strong> is a new Class (which works exactly as the old <strong>Item</strong>) but now with ability to attack with it. It is possible to add custom animations, a cooldown and tweak the damage of it. The attack physics is procedurally based on the animation, this means you can stab, slash or even smash things only by changing the animation and then the hit will be based on that!</p><p>The results are quite fun, the hit/damage also affects the environment dynamically 😊</p><video controls="" allowfullscreen="true"><source src="/videos/blog/november/melee.mp4" type="video/mp4"/></video><h2>Scripting Improvements</h2><p>We&#x27;ve listen to your demand and we&#x27;re finally bringing long-awaited new amazing scripting features!</p><h3>Real Hot Reload</h3><p><img src="/img/blog/november/hotreload.jpg"/></p><p>After several requests, we&#x27;ve started implementing a real Hot Reload feature!</p><p>The real <strong>Hot Reloading</strong> is an amazing feature which allows you loading new scripting code without needing to lose all the current memory state of your Packages. It works by loading the scripting files over the current running Lua VM.</p><p>Currently it works by manually triggering it in the console:</p><pre><code class="language-bash">package hotreload [PACKAGE_NAME|all]
</code></pre><p>This will update the clients with the newer files version and load the <code>Index.lua</code> files from the packages. It will keep the current memory state of the packages as it is. It will also unsubscribe from all registered Events in that package.</p><p>In the future, it would be possible to add a real-time checker to automatically update the modified files after saving them.</p><h3>Extending Classes</h3><p><img src="/img/blog/november/extending.jpg"/></p><p>A new cool feature that is being added is Extending and Inheriting nanos world Classes. <em>This is still experimental and we want to collect your feedback and find remaining bugs.</em></p><p>It is now possible to <strong>Add new Methods</strong> to nanos world Classes, <strong>Override existing Methods</strong> and even <strong>Override <strong>index and </strong>newindex</strong>.</p><p>Adding a new method to a class is easy like this:</p><pre><code class="language-lua">-- Adding a new method &#x27;AddScore&#x27; to Player class
function Player:AddScore(score)
    self:SetValue(&quot;score&quot;, self:GetValue(&quot;score&quot;, 0) + score)
end

-- Using it
my_player:AddScore(10)
</code></pre><p>Read the full documentation <a href="/docs/core-concepts/scripting/extending-classes">here</a>.</p><h2>New View Mode: TopDown</h2><p>We created a new native View Mode: <strong>TopDown</strong>!</p><p>This ViewMode allows you to fully control Characters from a TopDown perspective.</p><p>With just a single line:</p><pre><code class="language-lua">my_character:SetViewMode(ViewMode.TopDown)
</code></pre><p>nanos world becomes a completely different game, the mouse is now a crosshair which the Character aims to. Mechanics of picking up Weapons, grabbing Props and interacting with stuff was slightly modified to work with the ViewMode. Also driving is fully supported as well! 🤩</p><p>It also is possible to dynamically change the view mode and switch between them during game-play and also tweak settings such as camera distance and so on.</p><video controls="" allowfullscreen="true"><source src="/videos/blog/november/top-down.mp4" type="video/mp4"/></video><h2>New Camera Methods</h2><p>Player got a bunch of new Camera methods: <code>Player:SetCameraSocketOffset()</code>, <code>Player:SetCameraArmLength()</code>.</p><p>And also ability to detach and attach it to other actors (👀 including Props): <code>Player:AttachCameraTo()</code> and <code>Player:ResetCamera()</code>. It will attach including a Camera SpringArm component!</p><p>Note: <strong>Spectate</strong> methods from <strong>Client</strong> has been moved to <strong>Player</strong>: <code>Player:Spectate()</code>.</p><h2><a href="/docs/scripting-reference/classes/text-render">TextRender</a> on Server Side</h2><p>Now the Class <code>TextRender</code> now can be spawned on Server Side as well!</p><h2>Other Changes</h2><p>Besides the major topics covered here, we&#x27;ve got several other new features which were been added during the month:</p><ul><li>Added a new method for Character: <code>Character:Follow()</code> which will make the AI follow other actor.</li><li>Added a new Utils method: <code>NanosUtils.Benchmark()</code> which will take a function as parameter and test the performance of it.</li><li>Now <code>Subscribe</code> will return the callback function (which can be used to Unsubscribe afterwards).</li><li>Fixed tons of bugs, detailed information can be found in the Discord Changelog channel.</li></ul><h2>Unreal Engine 5</h2><p><img src="/img/blog/november/ue5.jpg"/></p><p>Lastly, it is already known we have a big objective of porting nanos world to Unreal Engine 5. Personally this is something I wanted to do as soon as possible because Unreal Engine 5 features are amazing, not to mention the publicity and marketing bonuses we would get for nanos world.</p><p>In this month, we decided to give a try: we tested porting nanos world to Unreal 5, at first we had some problems because of some Unreal modules have been completely renamed or even removed. And also we got some Unreal methods deprecated by the newer version, so we needed to update them and even reimplement some small stuff.</p><p>Currently Unreal Engine 4 uses PhysX physics and in Unreal 5 all the Physics Engine have been replaced by <a href="https://docs.unrealengine.com/5.0/en-US/PhysicsFeatures/ChaosVSPhysxOverview/">Unreal&#x27;s Chaos</a>, which is a new Engine replacing the NVIDIA&#x27;s PhysX.</p><p>This made us need to disable Vehicles for this test, as Unreal vehicles are very dependent on the PhysX engine and I would need to reimplement them using the new Chaos API for vehicles (I believe that our Vehicles API will need to change a bit as well once we fully update it).</p><p>But after half of dozen adaptions and disabled Vehicles, the results were surprisingly good! nanos world worked on Unreal Engine 5! Personally I got very happy and proud that the biggest problems I had was updating deprecate methods and updating some Unreal modules, thanks to the architecture developed so far in nanos world!</p><h3>Graphical Results</h3><p>nanos world on Unreal Engine 5 is beautiful, joying with Lumen and Global Illumination is really fun!</p><p>There were some graphical artifacts (such as changing the time of day too fast causing a delay/ghosting effect), but I believe they will improve them for the final Unreal Engine 5 version.</p><p>Check it out some screenshots taken during the tests trying the Global Illumination and Lumen:</p><p><img src="/img/blog/november/ue5-outside.jpg"/></p><p><img src="/img/blog/november/ue5-inside-gas-01.jpg"/></p><p><img src="/img/blog/november/ue5-inside-gas-02.jpg"/></p><p><img src="/img/blog/november/ue5-inside-flash-01.jpg"/></p><p><img src="/img/blog/november/ue5-inside-flash-02.jpg"/></p><p><img src="/img/blog/november/ue5-inside-flash-03.jpg"/></p><h3>Stability</h3><p>Unfortunately the stability was extremely bad. It didn&#x27;t surprise me too much as Unreal Engine 5 is on Early Access, so bugs and crashes would happen. Several random crashes occurred during gameplay, I could notice mostly of them were caused by the new Chaos Engine (related to Physics).</p><h3>What now?</h3><p>I was really happy in being able to port nanos world to Unreal Engine 5, this attempt made us be sure that this would be possible. But I decided that currently is not time yet. During the tests we had several crashes (random ones, related to the low-level of Unreal, mainly coming from Chaos Engine and from Water) that made us conclude that is better to wait a better stable version because it makes nanos world really unplayable. Those random crashes are extremely bad as sometimes it&#x27;s hard to know if it&#x27;s my or Unreal&#x27;s fault.</p><p>Fortunately, with this we could prove ourselves that nanos world will, when the time comes, be compatible and updated to Unreal Engine 5!</p>]]></content>
        <author>
            <name>Gabriel T. Nardy</name>
            <uri>https://twitter.com/gtnardy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[October: Alpha released!]]></title>
        <id>alpha-released</id>
        <link href="https://docs.nanos.world/pt-BR/blog/alpha-released"/>
        <updated>2021-11-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We proudly present...]]></summary>
        <content type="html"><![CDATA[<p><img src="/img/blog/alpha/alpha-release.jpg"/></p><p>We proudly present...</p><p>...The big long list of Alpha updates!</p><h2>Initial Thoughts</h2><p>Thank you everyone for all the support this last month! Our community has grown a lot and it&#x27;s lovely to see how nice and friendly it is becoming 🥰!</p><p>The Playtest session in the Sunday was amazing! We were able to test the stability of the game very well. I can say that most of the crashes we had were related to external integration issues (WebUI or Unreal itself), which shows a great maturity of our Core system. I think about doing it more often, it was a lot of fun playing Halloween mode and testing the community game-modes!</p><p>From now on, all updates will start to be versioned (finally!), small updates/non break-changes will get a PATCH version and break-changing will get a MINOR version.</p><p>:::note</p><p>The following changelog contains all features since last officially announced release 0.73.0. Many of the next items were already in the bleeding-edge branch.</p><p>::: <iframe class="steam-widget" src="https://store.steampowered.com/widget/1686450/" frameborder="0" width="620" height="190" loading="lazy" mark="crwd-mark"></iframe></p><h2>Materials</h2><p><img src="/img/blog/alpha/material.jpg"/></p><p>Now nanos world supports Materials Assets! 🎨</p><p>This means you can configure your own materials in your Assets.toml and reference them using <a href="/docs/scripting-reference/classes/base-classes/paintable">Paintable</a> methods!</p><p>The function <code>:SetDefaultMaterial()</code> has been replaced with <code>:SetMaterial()</code>. You can see a list of all built-in Materials read to use <a href="/docs/next/assets-modding/default-asset-pack/default-materials">here</a>.</p><p>Also it is now possible to get the WebUI material and set it to any surface (read more below)!</p><p>Some existing methods are suffering a rework due that, e.g. <a href="/docs/scripting-reference/classes/base-classes/pickable">Pickables</a> got a new method <code>:SetCrosshairMaterial()</code>, so you can set the Crosshair from a Material (and not from a predefined list anymore), also all old Crosshair have been converted into materials which you can find <a href="/docs/scripting-reference/classes/base-classes/pickable#list-of-crosshairs-materials-included-in-default-asset-pack">here</a>.</p><h2>Improved WebUI</h2><p><img src="/img/blog/alpha/webui.jpg"/></p><p>The <a href="/docs/scripting-reference/classes/webui">WebUI</a> received several improvements, including the ability to run HTML5 Audio and Videos! 📽</p><p>:::caution</p><p>We are using a Beta version of Ultralight, which supports Audio and Video, crashes <strong>WILL</strong> happen, also the Audio is currently 2D only. Ultralight is working on a solution so I can implement 3D audio.</p><p>:::</p><p>The <strong>WebUI</strong> constructor received some new parameters: <strong>is_transparent</strong>, <strong>auto_resize</strong>, <strong>width</strong> and <strong>height</strong>. Width and Height will only be used if Auto Resize is <strong>OFF</strong>, this is useful if you want to spawn a WebUI to use as Material to any surface (and don&#x27;t want it to be the size of the screen).</p><p>Also it received new methods: <a href="/docs/scripting-reference/classes/webui#setfreeze">:SetFreeze()</a>, <a href="/docs/scripting-reference/classes/webui#resize">:Resize()</a> and <a href="/docs/scripting-reference/classes/webui#setautoresize">:SetAutoResize()</a>.</p><p>A new Searcher has been added onto it, improving how it can load your .html files, they are now looked in the following order:</p><ol><li>Relative to <code>current-file-path/</code></li><li>Relative to <code>current-package/Client/</code></li><li>Relative to <code>current-package/</code></li><li>Relative to <code>Packages/</code></li></ol><p>It is now possible to spawn a Material from a WebUI, which renders dynamic and automatically into <strong>any</strong> surface: <code>:SetMaterialFromWebUI()</code> (method from Actors).</p><h2>Actors</h2><p>New additions for <a href="/docs/scripting-reference/classes/base-classes/actor">Actors</a>:</p><ul><li>Added new method for all actors: <a href="/docs/scripting-reference/classes/base-classes/actor#setlifespan">:SetLifeSpan(time)</a> which will automatically destroy this actor after <code>time</code> seconds.</li><li>Added new method for all actors: <a href="/docs/scripting-reference/classes/base-classes/actor#isbeingdestroyed">:IsBeingDestroyed()</a> which will return if this actor is being destroyed (useful to check from inside other Events such as <code>Drop</code> or <code>Ungrab</code>).</li><li>Added new parameter for all actors <a href="/docs/scripting-reference/classes/base-classes/actor#attachto">:AttachTo()</a> method: <code>lifespan_when_detached</code>, which will destroy the actor after <code>time</code> seconds after it&#x27;s detached.</li><li>Now event <a href="/docs/scripting-reference/classes/base-classes/actor#takedamage">TakeDamage</a> has a new argument: <code>causer</code> (the object/actor which caused the damage). Also added new damage types: <code>RunOverVehicle</code> and <code>RunOverProp</code>.</li><li>Now event <a href="/docs/scripting-reference/classes/base-classes/actor#hit">Hit</a> has new arguments: <code>impact_force</code>, <code>normal_impulse</code>, <code>impact_location</code> and <code>velocity</code>.</li><li>Now <a href="/docs/scripting-reference/classes/base-classes/actor#setlocation">:SetLocation()</a> will try to find the better spot to teleport the Actor (to avoid collisions).</li></ul><h2>Character</h2><p><img src="/img/blog/alpha/character.jpg"/></p><p>New additions for <a href="/docs/scripting-reference/classes/character">Characters</a>:</p><p><strong>Character Methods additions/improvements:</strong></p><ul><li>Added several new Getters from it&#x27;s properties.</li><li>Added <a href="/docs/scripting-reference/classes/character#setdamagemultiplier">:SetDamageMultiplier()</a> change the damage multiplier depending on the bone damaged.</li><li>Added <a href="/docs/scripting-reference/classes/character#sethiddenbone">:SetHiddenBone()</a> to make invisible any part of the body.</li><li>Added <a href="/docs/scripting-reference/classes/character#setjumpzvelocity">:SetJumpZVelocity()</a> to make the character jump higher.</li><li>Improved <a href="/docs/scripting-reference/classes/character#playanimation">:PlayAnimation()</a> got new parameters (blend times, loop and play rate), and now it supports loading any type of animation (Montage or Sequence).</li><li>Removed <code>:SetInitialLocation()</code>, it has been replaced with <a href="/docs/scripting-reference/classes/character#respawn">:Respawn()</a>.</li></ul><p><strong>Character Events additions/improvements:</strong></p><ul><li>Added <a href="/docs/scripting-reference/classes/character#attemptentervehicle">AttemptEnterVehicle</a> called when Character tries to enter a vehicle, returns false to prevent it.</li><li>Added <a href="/docs/scripting-reference/classes/character#attemptleavevehicle">AttemptLeaveVehicle</a> called when Character tries to leave a vehicle, returns false to prevent it.</li><li>Added <a href="/docs/scripting-reference/classes/character#attemptreload">AttemptReload</a> called when Character tries to reload it&#x27;s weapon, returns false to prevent it.</li><li>Added <a href="/docs/scripting-reference/classes/character#interact">Interact</a> called when Characters tries to Pick Up a Pickable or Grab a Prop.</li><li>Added <a href="/docs/scripting-reference/classes/character#highlight">Highlight</a> called when Characters looks at a Prop or Pickable being able to pick up it.</li></ul><p>Some Characters animations have been renamed from <code>AM_</code> to <code>A_</code> in the Default Asset Pack (as they are not Montages anymore). Also lots of new Animations have been added.</p><h2>Weapons</h2><p><img src="/img/blog/alpha/weapon.jpg"/></p><p>New additions for <a href="/docs/scripting-reference/classes/weapon">Weapons</a>:</p><p><strong>Weapon Methods additions/improvements:</strong></p><ul><li>Added several new Getters from it&#x27;s properties.</li><li>Added <a href="/docs/scripting-reference/classes/weapon#setrecoil">:SetRecoil()</a> how much the weapon recoils physically.</li><li>Added <a href="/docs/scripting-reference/classes/weapon#setwallbangsettings">:SetWallbangSettings()</a> configure if bullets wallbangs walls.</li><li>Added <a href="/docs/scripting-reference/classes/weapon#setanimationfire">:SetAnimationFire()</a> animation on Weapon Skeletal when firing.</li><li>Added <a href="/docs/scripting-reference/classes/weapon#setsoundfirelastbullets">:SetSoundFireLastBullets()</a> sound when <code>N</code> last bullets are remaining in the clip.</li><li>Improved <a href="/docs/scripting-reference/classes/weapon#setanimationreload">:SetAnimationReload()</a> now has <code>play_rate</code> parameter.</li></ul><p><strong>Additional stuff:</strong></p><ul><li>Now weapons are hidden when Characters are driving.</li><li>Added sounds of Shell Dropping &amp; hitting the ground for the built-in Shell particles (this is a procedural and 100% precise sound 😉).</li><li>Added sounds when picking up or dropping weapons, also it will slightly throw the weapon to the front when dropping it.</li></ul><h2>Grenades</h2><p><img src="/img/blog/alpha/grenade.jpg"/></p><p>All Properties from <a href="/docs/scripting-reference/classes/grenade">Grenades</a> have been deprecated, now access must be done through Methods.</p><p>We&#x27;ve added a special Particle for Grenades <code>nanos-world::P_Grenade_Special</code> which will explode different particles depending on the ground the grenade is. E.e. will explode a &quot;grass explosion&quot; particle if grenade is over a grass surface, and a &quot;water explosion&quot; particle if it&#x27;s under water. <strong>Note:</strong> This particle only works for Grenades.</p><h2>Sounds</h2><p><img src="/img/blog/alpha/sound.jpg"/></p><p>New additions for <a href="/docs/scripting-reference/classes/sound">Sounds</a>:</p><p>Now it is possible to load <code>.ogg</code> sounds at runtime! You can store them in any Package or Asset Pack and load it using our new pattern for <code>SpecialPath</code> (<code>assets///asset-pack-name/path.ogg</code> or <code>package///package-name/path.ogg</code>).</p><p>Added <code>loop_mode</code> parameter to constructor (can loop any sound forever now).</p><p>Also, it is possible to pass <code>.ogg</code> using the SpecialPath in any Sound parameter.</p><p><strong>Sound Methods additions/improvements:</strong></p><ul><li>Added <a href="/docs/scripting-reference/classes/sound#getduration">:GetDuration()</a>.</li><li>Improved <a href="/docs/scripting-reference/classes/sound#fadein">:FadeIn()</a> and <a href="/docs/scripting-reference/classes/sound#fadeout">:FadeOut()</a> parameters.</li></ul><h2>Input</h2><p><img src="/img/blog/alpha/input.jpg"/></p><p>Added a new class: <a href="/docs/scripting-reference/static-classes/input">Input</a>!</p><p>Now you can control, create and customize KeyBindings in a proper way! Example:</p><pre><code class="language-lua">-- Registers the binding_name &#x27;SpawnMenu&#x27; with default key &#x27;Q&#x27;
-- This will add &#x27;SpawnMenu&#x27; to user KeyBinding Settings automatically
Input.Register(&quot;SpawnMenu&quot;, &quot;Q&quot;)

-- Subscribes for Pressing the key
Input.Bind(&quot;SpawnMenu&quot;, InputEvent.Pressed, function()
    -- Opens the Spawn Menu
end)

-- Subscribes for Releasing the key
Input.Bind(&quot;SpawnMenu&quot;, InputEvent.Released, function()
    -- Closes the Spawn Menu
end)
</code></pre><h2>HTTP</h2><p><img src="/img/blog/alpha/http.jpg"/></p><p>Added a new class: <a href="/docs/scripting-reference/static-classes/http">HTTP</a>!</p><p>Now we have a proper standalone class for making HTTP requests. Is also features Async HTTP requests (and thread safe!)</p><h2>Performance Optimization</h2><p><img src="/img/blog/alpha/performance.jpg"/></p><p>We have worked hard on performance techniques for Alpha update. Here&#x27;s the highlights:</p><ul><li>Now Basic Structs <a href="/docs/scripting-reference/utility-classes/vector">Vector</a> and <a href="/docs/scripting-reference/utility-classes/rotator">Rotator</a> are automatically compressed when sending through the Network. Reducing it&#x27;s size up to 90% in the best case! This was a great gain for network use.</li><li>A new setting was added <code>Profiling</code> which you can enable with <code>--profiling</code> on server and in Settings on Client. This will log all the time elapsed to run operations/scripting events and some other stuff in the Console.</li><li>Now HTTP requests (a.k.a. downloading files when joining a server) are automatically compressed, which may reduce the network usage when downloading big files!</li><li>Now Actors which are very far or not on screen will be synchronized/updated half the time to improve performance. We still want to tweak it and make it more aggressive on some cases.</li><li>The Assets Loading system have been reworked and is much faster now.</li><li>Small <a href="/docs/scripting-reference/classes/prop">Props</a> (radius &lt; 200) will not collide with players or dynamic objects anymore. Also Bigger props will have CCD disabled by default (which drastically improved performance), this can be enabled in the Prop constructor.</li><li>Now VOIP uses Steam system, which provides a great compression and also custom settings through Shift+Tab menu.</li><li>Several improvements were made on our low-level Lua code to boost scripting performance.</li></ul><h2>Server</h2><p>New additions to <a href="/docs/scripting-reference/static-classes/server">Server</a> static class:</p><ul><li>Added new console command: <code>map [MAP_NAME]</code> to change the game map, this will also reload all packages and reconnect all players (like restarting the server).</li><li>Added new methods <a href="/docs/scripting-reference/static-classes/server#getversion">Server.GetVersion()</a>, <a href="/docs/scripting-reference/static-classes/server#getip">Server.GetIP()</a>, <a href="/docs/scripting-reference/static-classes/server#getport">Server.GetPort()</a>, <a href="/docs/scripting-reference/static-classes/server#getqueryport">Server.GetQueryPort()</a> and several missing getters.</li></ul><h2>Client</h2><p>New additions to <a href="/docs/scripting-reference/static-classes/client">Client</a> static class:</p><ul><li>New parameters have been added to <a href="/docs/scripting-reference/static-classes/client#setcameralocation">Client.SetCameraLocation()</a> and <a href="/docs/scripting-reference/static-classes/client#setcamerarotation">Client.SetCameraRotation()</a> to enable smooth movements with camera in a certain time.</li><li>New methods for drawing debug shapes in 3D world: <a href="/docs/scripting-reference/static-classes/client#drawdebug">Client.DrawDebug...()</a>.</li><li>Changed <a href="/docs/scripting-reference/static-classes/client#sethighlight">Client.SetHighlight()</a> parameters, now it takes a Enum to define how the highlight will be.</li><li>Added new method <a href="/docs/scripting-reference/static-classes/client#setsteamrichpresence">Client.SetSteamRichPresence()</a> to customize the message in Steam Friends list.</li></ul><p>Now when joining a server, a Progress Bar will be displayed in the Taskbar, and also it will Flash once the loading is done:</p><p><img src="/img/blog/alpha/progress-taskbar.jpg"/></p><h2>In-game Console</h2><p>Now it is possible to access Server Console from within the game!</p><p>If you open it, 2 tabs will appear: <strong>client</strong> and <strong>server</strong>. You can read all server logs, and also input commands.</p><p>:::note</p><p>Not all logs will appear in there, only the ones outputted while you are connected to the server.</p><p>:::</p><p><img src="/img/blog/alpha/console.jpg"/></p><h2>Timer</h2><p>New additions to <a href="/docs/scripting-reference/static-classes/timer">Timer</a>:</p><ul><li>Added new method: <a href="/docs/scripting-reference/static-classes/timer#bind">Timer.Bind(timer_id, actor)</a> - this will associate a timer to an actor, when the actor is destroyed, this timer is destroyed too and will never be called.</li><li>Added new method: <a href="/docs/scripting-reference/static-classes/timer#isvalid">Timer.IsValid(timer_id)</a>.</li></ul><h2>CLI</h2><ul><li>Now it is possible to download multiple Assets/Packages at once with <a href="/docs/core-concepts/server-manual/nanos-world-cli">CLI</a>, just separate them by spaces, e.g.: <code>cli assets install quaternius city-park</code>.</li></ul><h2>Steam Achievements</h2><p><img src="/img/blog/alpha/achievements.jpg"/></p><p>With Steam integration, we are making use of every feature possible it allows 😅!</p><p>And this includes the <strong>Achievements</strong>! We are counting on the support of a talented friend <a href="https://www.instagram.com/estherhoffmann/">Esther</a> who is drawing the amazing arts for them!</p><p>Little by little we will be creating more achievements and releasing them! We also count on your ideas for more!</p><h2>Scripting Improvements</h2><ul><li><p>Added new Searchers to <a href="/docs/scripting-reference/static-classes/package#require">Package.Require()</a>, we now currently support 5 searchers, which are looked in the following order:</p><ol><li>Relative to <code>current-file-path/</code></li><li>Relative to <code>current-package/Client/</code> or <code>current-package/Server/</code> <em>(depending on your side)</em></li><li>Relative to <code>current-package/Shared/</code></li><li>Relative to <code>current-package/</code></li><li>Relative to <code>Packages/</code></li></ol></li><li><p><a href="/docs/scripting-reference/static-classes/package#require">Package.Require()</a> now can be called in runtime and at any moment.</p></li><li><p><a href="/docs/scripting-reference/static-classes/package#requirepackage">Package.RequirePackage()</a> now will load a package as a library inside the current package, it means the package loaded will now be automatically sent to clients, and all paths it loads is relative to the package itself (and not to the one which is requiring it anymore).</p></li><li><p>Verbose logs will now display the current thread ID.</p></li></ul><h2>Renamed Default Packages</h2><p>The default Packages <code>NanosWorldWeapons</code> and <code>NanosWorldVehicles</code> were renamed to <code>nanos-world-weapons</code> and <code>nanos-world-vehicles</code>, following the new correct pattern for Packages and Assets names. Including them now should be made like <code>Package.RequirePackage(&quot;nanos-world-weapons&quot;)</code>, the usage keeps the same (<code>NanosWorldWeapons.AK47()</code>).</p><h2>General Changes</h2><ul><li><a href="/docs/scripting-reference/classes/cable">Cable</a> got new methods: <code>:GetAttachedStartTo()</code> and <code>:GetAttachedEndTo()</code> to get if it&#x27;s attached at any end.</li><li><a href="/docs/scripting-reference/classes/player">Player</a> got new methods: <code>:SetVOIPVolume()</code>, <code>:GetSteamID()</code>,</li><li><a href="/docs/scripting-reference/classes/base-classes/pickable">Pickables</a> got new events: <code>ReleaseUse</code>, <code>PullUse</code> when Character pulls or releases its usage (i.e. trigger for weapons)</li><li>Improved the way the interact trigger enables for <a href="/docs/scripting-reference/classes/base-classes/pickable">Pickables</a> and <a href="/docs/scripting-reference/classes/prop">Props</a>.</li><li><a href="/docs/scripting-reference/classes/trigger">Trigger</a> got new method: <code>:ForceOverlapChecking()</code> which will checks for overlaps in the game thread and immediately dispatch events.</li><li>Added new methods for <a href="/docs/scripting-reference/utility-classes/quaternion">Quaternions</a> (+, -, Normalize).</li><li>Added new method for generating a random <a href="/docs/scripting-reference/utility-classes/rotator">Rotator</a>: <code>Rotator.Random()</code>.</li><li>Added lots of new Sounds, Animations, Props, Meshes in the Default Asset Pack.</li><li>Added Steam Login.</li><li>All .config files had it&#x27;s <code>tabs</code> replaced with <code>spaces</code>.</li><li><code>.GetPairs()</code> now only supports <code>pairs</code>.</li><li>Added Resolutions graphic settings.</li><li>Make Day button from In-game menu has been removed.</li><li>Added new Splash Effects when Props or objects enter the Water.</li><li><code>:GetValue()</code> now has an additional parameter: <code>fallback</code> which will be returned if the value doesn&#x27;t exist.</li><li>Probably many other things that were being added and were forgotten 😜.</li></ul><h2>Bug Fixes</h2><ul><li>Fixed <code>World.SetFogDensity()</code> not working.</li><li>Fixed <code>Client.SetCameraLocation</code> not working.</li><li>Fixed <code>Actors.RotateTo()</code> not doing properly math.</li><li>Fixed <code>StaticMesh.GetBounds()</code> not working.</li><li>Fixed Cables methods being able to be called on client side.</li><li>Fixed several <strong>Character</strong> properties not syncing.</li><li>Fixed a crash when changing Map at runtime.</li><li>Fixed Characters not reseting the life to <code>max_health</code> when Respawning.</li><li>Fixed dead ragdolls still moving around (from <code>MoveTo()</code>).</li><li>Fixed infinite recursion with <code>LogEntry</code> event.</li><li>Fixed <strong>Characters</strong> Morph Targets not syncing.</li><li>Fixed Discord custom integration not working sometimes.</li><li>Fixed a crash when a player had no Steam Profile image.</li><li>Fixed Server Announce checkbox being disabled when unchecked on New Game screen.</li><li>Fixed a crash when destroying entities from inside <code>Interact</code> event.</li><li>Fixed hell lot of other Crashes 💥. Thanks for the Crash Reports!</li></ul>]]></content>
        <author>
            <name>Gabriel T. Nardy</name>
            <uri>https://twitter.com/gtnardy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Weapons Improvements]]></title>
        <id>weapons-improvements</id>
        <link href="https://docs.nanos.world/pt-BR/blog/weapons-improvements"/>
        <updated>2021-10-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[One of our main focus for nanos world is having fun, and we believe that the small details are the big support for the experience to be complete. In the past weeks, we've been working on improving and adding small features to common actions such as firing, picking up objects and even how you perceive them happening. Here's the highlights!]]></summary>
        <content type="html"><![CDATA[<p>One of our main focus for nanos world is having fun, and we believe that the small details are the big support for the experience to be complete. In the past weeks, we&#x27;ve been working on improving and adding small features to common actions such as firing, picking up objects and even how you perceive them happening. Here&#x27;s the highlights!</p><h2>New Weapon Animations</h2><p>Since the beginning, our weapons were stiff when shooting giving an impression of rigidity and lack of fluidity. With the simple improvement of adding firing animations to that, look how it looks better:</p><video controls="" allowfullscreen="true"><source src="/videos/blog/weapons-improvements/m1911.mp4" type="video/mp4"/></video><video controls="" allowfullscreen="true"><source src="/videos/blog/weapons-improvements/makarov.mp4" type="video/mp4"/></video><h2>New effects for Bullet Shells</h2><p>Besides new animations, we added a subtle detail: <strong>Bullet Shells Drop SFX</strong>. And not that simple! The sound is precisely played in the location and moment the shells hit the ground or any surface, listen:</p><video controls="" allowfullscreen="true"><source src="/videos/blog/weapons-improvements/bullet-shell-drop.mp4" type="video/mp4"/></video><p>Check out a complete before and after comparison of some of the weapons, you can notice all the improvements in detail! <iframe width="620" height="347" src="https://www.youtube-nocookie.com/embed/ln4AUntcyLM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" mark="crwd-mark"></iframe></p><br/><br/><p>Note that nanos world weapons animations and aiming are completely generated procedurally, that means when you are in First Person, the weapon sight location is calculated dynamically to be positioned right in the middle of your eyes, in a true first person mode.</p><h2>SFX when Picking Up objects</h2><p>A subtle sound detail added when you grab and drop a Weapon, and also now the object is slightly thrown to forward:</p><video controls="" allowfullscreen="true"><source src="/videos/blog/weapons-improvements/picking-up.mp4" type="video/mp4"/></video><h2>Scopes</h2><p>Is is really easy to add attachable objects in any Weapon, for example attaching a AWP Scope, we use the <code>SM_Scope_25x56</code> mesh for that:</p><pre><code class="language-lua">-- Spawns a AWP Weapon
local weapon = Weapon(location or Vector(), rotation or Rotator(), &quot;nanos-world::SK_AWP&quot;)

-- Attaches a Scope mesh, with configured offset to be perfectly aligned
weapon:AddStaticMeshAttached(&quot;sight&quot;, &quot;nanos-world::SM_Scope_25x56&quot;, &quot;&quot;, Vector(20, 0, 11))

-- Adjusts Sight Location to put the Sniper at exact location where the scope center will be when ADS
weapon:SetSightTransform(Vector(-15, 0, -4.6), Rotator(0, 0, 0))
</code></pre><video controls="" allowfullscreen="true"><source src="/videos/blog/weapons-improvements/sniper-scope.mp4" type="video/mp4"/></video><p>This is completely procedural, it also uses the 3D Mesh scope materials!</p><p>:::tip</p><p>You can also check the <a href="https://github.com/nanos-world/nanos-world-weapons">Official Weapons Package</a>, and see how a RedDot has been added to a P90!</p><p>:::</p><p>That&#x27;s it! Thank you all!</p>]]></content>
        <author>
            <name>Gabriel T. Nardy</name>
            <uri>https://twitter.com/gtnardy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[September: Sandbox Improvements]]></title>
        <id>sandbox-improvements</id>
        <link href="https://docs.nanos.world/pt-BR/blog/sandbox-improvements"/>
        <updated>2021-10-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Lot's of improvements on Sandbox game-mode has been made in the past month, here's the highlights!]]></summary>
        <content type="html"><![CDATA[<p>Lot&#x27;s of improvements on Sandbox game-mode has been made in the past month, here&#x27;s the highlights!</p><h2>Reworked Spawn Menu UI &amp; UX</h2><p>We thought a lot about how to make the experience of sandbox game-mode even better. And with that we made several improvements, including the addition of categories in the sidebar, new tabs and even new stuff to spawn! Not to mention several bug fixes and the overall usability has been improved! No more movement blocked when opening the Spawn Menu!</p><video controls="" allowfullscreen="true"><source src="/videos/blog/sandbox-improvements/new-sandbox-ui.mp4" type="video/mp4"/></video><h2>New Props 📦</h2><p>We&#x27;re importing a big pack of props that will come with the base game.</p><p>We&#x27;ve been debating a lot what the threshold is between shipping the game with several props or shipping it with no props and just allowing the player to download whatever they want from the Vault. It&#x27;s a tough decision, but for now we&#x27;ve decided to deliver a basic pack with some cool stuff, including new <strong>Construction Props</strong>, <strong>Fruits</strong>, <strong>Tools</strong> and even new <strong>Weapons</strong>!</p><p><img src="/img/blog/sandbox-improvements/new-props.jpg"/></p><h2>NPCs 🤖</h2><p>It&#x27;s been in there for some time, but we&#x27;d like to highlight it! On Spawn Menu now there is a new tab which allows spawning NPCs.</p><p>Those NPCs has some basic functionality defined in Lua, they walk around randomly and even run away when they are threatened! Insane!</p><video controls="" allowfullscreen="true"><source src="/videos/blog/sandbox-improvements/npcs.mp4" type="video/mp4"/></video><h2>New Weapons  🔫</h2><p>This is not strictly related to Sandbox game-mode, but besides the new Props, we are shipping brand new and configured Weapons in the <code>nanos-world-weapons</code> default package!</p><p>This includes a P90, UMP-45, M1911 Pistol and many other!</p><video controls="" allowfullscreen="true"><source src="/videos/blog/sandbox-improvements/new-weapons.mp4" type="video/mp4"/></video><h2>Weapons Pattern 🎨</h2><p>Besides the categories in the left-side, we are starting to add a new section to be our &quot;options section&quot;, we started by adding a new option in the Weapons tab: <strong>Patterns</strong>.</p><p><img src="/img/blog/sandbox-improvements/weapon-pattern.jpg"/></p><p><img src="/img/blog/sandbox-improvements/weapon-pattern-floor.jpg"/></p><p><img src="/img/blog/sandbox-improvements/weapon-pattern-infernoo.jpg"/></p><p>You can change and select any pattern from the hundreds included in the game to be applied in your weapon (it is synchronized with other players as well)! It&#x27;s is really easy to add your own <code>.jpg</code> as pattern in the menu!</p><video controls="" allowfullscreen="true"><source src="/videos/blog/sandbox-improvements/weapons-pattern.mp4" type="video/mp4"/></video><h2>Breakable Props 🍉</h2><p>This is an awesome feature which I&#x27;ve been working in the last weeks, it&#x27;s something 100% scripting side, I&#x27;m not sure yet if this should become a built-in thing.</p><video controls="" allowfullscreen="true"><source src="/videos/blog/sandbox-improvements/breakable-watermelon.mp4" type="video/mp4"/></video><p>But now on Sandbox we can configure Props to break when Hit or TakeDamage! It is also possible to easily configure which debris will be generated, it&#x27;s randomness and much more, see an example:</p><pre><code class="language-lua">SetBreakableProp(&quot;nanos-world::SM_Fruit_Watermelon_01&quot;, 700, {
    { mesh = &quot;nanos-world::SM_Fruit_Watermelon_01_Half_01&quot;, rotation = Rotator() },
    { mesh = &quot;nanos-world::SM_Fruit_Watermelon_01_Half_01&quot;, rotation = Rotator(180, 0, 0) },
    { mesh = &quot;nanos-world::SM_Fruit_Watermelon_01_Crust_01&quot; },
    { mesh = &quot;nanos-world::SM_Fruit_Watermelon_01_Slice_01&quot; },
    { mesh = &quot;nanos-world::SM_Fruit_Watermelon_01_Slice_01&quot; },
})
</code></pre><p>And voila every time a Watermelon spawns through the Spawn Menu, it will be breakable!</p><h2>Explosive Props 💥</h2><p>In a sub-category as Breakable Props, we can have Explosive ones! Which will not only break if they take damage or get Hit, but will also EXPLODE! Causing damage, and even start a chain reaction of explosions!</p><video controls="" allowfullscreen="true"><source src="/videos/blog/sandbox-improvements/chain-explosions.mp4" type="video/mp4"/></video><video controls="" allowfullscreen="true"><source src="/videos/blog/sandbox-improvements/gas-house-explosion.mp4" type="video/mp4"/></video><video controls="" allowfullscreen="true"><source src="/videos/blog/sandbox-improvements/gas-explosion-danger.mp4" type="video/mp4"/></video><p>As you can see it can be very dangerous to play with fire! 😅</p><h2>What&#x27;s next! 💡</h2><p>We are currently working on making everything ready for the official Alpha 1.0.0 release! We are slowly distributing Beta Keys to some testers, this way we can calmly fix some last bugs and give the finishing touches before the full launch!</p><p>We&#x27;ve also implemented a LOT of new content for modding &amp; scripting that will still be announced in the next weeks! This will make a HUGE changelog list so probably I will highlight all features in separated Blog News!</p><p>That&#x27;s all for this blog! Thank you so much for all your support! 🥰</p><video controls="" allowfullscreen="true"><source src="/videos/blog/sandbox-improvements/watch-teaser.mp4" type="video/mp4"/></video>]]></content>
        <author>
            <name>Gabriel T. Nardy</name>
            <uri>https://twitter.com/gtnardy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[o Nanos World está chegando ao Alpha!]]></title>
        <id>alpha</id>
        <link href="https://docs.nanos.world/pt-BR/blog/alpha"/>
        <updated>2021-09-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Muito tempo se passou desde que começamos a desenvolver o Nanos World. No final de 2017, começamos a cavar sobre essa ideia ambiciosa, sonhávamos em criar uma experiência de jogo sandbox de mundo aberto sem as limitações de jogos de engenharia reversa como Just Cause 3 ou Grand Theft Auto. Então decidimos criar um jogo do zero, mas só em meados de 2019 começamos a trabalhar muito, foi uma ideia muito entusiasmada, mas depois de muito sangue, amor e suor estamos chegando lá! 🥰]]></summary>
        <content type="html"><![CDATA[<p><img src="/img/blog/alpha/alpha-banner.jpg"/></p><p>Muito tempo se passou desde que começamos a desenvolver o Nanos World. No final de 2017, começamos a cavar sobre essa ideia ambiciosa, sonhávamos em criar uma experiência de jogo sandbox de mundo aberto sem as limitações de jogos de engenharia reversa como Just Cause 3 ou Grand Theft Auto. Então decidimos criar um jogo do zero, mas só em meados de 2019 começamos a trabalhar muito, foi uma ideia muito entusiasmada, mas depois de muito sangue, amor e suor estamos chegando lá! 🥰</p><h2>Alpha 1.0.0!</h2><p>And we&#x27;re finally reaching the long-awaited Alpha announcement! Lots of things have happened, lots of iterations have been done (and lots will come 😜) and thanks to all the support from our community and your feedback, we&#x27;re getting closer and closer to releasing nanos world!</p><p>The official Alpha 1.0.0 update will come with tons of scripting and gaming news!</p><h2>Steam!</h2><p><img src="/img/blog/alpha/steam-guy.jpg"/></p><p>Along with the Alpha announcement, we have LOTS of other surprises! As you may have noticed, now <a href="https://store.steampowered.com/app/1686450/nanos_world">nanos world is on STEAM</a>!!! Itch was very good and helped us a lot at the time, and we will always be grateful that their service and support has always been free! But then we made the decision to take this next step moving to the biggest game platform!</p><p>:::tip</p><p>🎋 Please don&#x27;t forget to <strong>WISHLIST</strong> and share <a href="https://store.steampowered.com/app/1686450/nanos_world">nanos world steam page</a>!</p><p>::: <iframe class="steam-widget" src="https://store.steampowered.com/widget/1686450/" frameborder="0" width="620" height="190" loading="lazy" mark="crwd-mark"></iframe></p><h2>New Website!</h2><p><img src="/img/blog/alpha/new-website.jpg"/></p><p>We&#x27;ve created a brand new website which contains a lot of information about nanos world which will help us marketing it! If you didn&#x27;t yet, please take a look at <a href="https://nanos.world">https://nanos.world</a>!</p><h2>Lot of news to come!</h2><p>In the meantime since the last update (0.73.0), we&#x27;ve accumulated <strong>A LOT</strong> of new content for nanos world. Most couldn&#x27;t be released as we were working alongside the Steam integration.</p><h3>🔢 Versions</h3><p><img src="/img/blog/alpha/betas.jpg"/></p><p>With the arrival of Steam, there will be several changes to how we distribute updates! We will now have two branches <code>stable/latest</code> and <code>bleeding-edge</code>, we intend to keep the default branch as stable as possible, while working in upcoming content in the <em>bleeding-edge</em> branch.</p><p>By default all testers will have access to <em>bleeding-edge</em> to be able to help us testing the new features before releasing them officially! Also in the docs we are going to have two versions which represent each of the branch!</p><p>:::info</p><p>The version <strong>a1.0.0</strong> is already present in <em>bleeding-edge</em> branch and will come to <em>stable</em> as soon as possible! Really soon we will start publishing the full changelog of that!</p><p>:::</p><h3>🧪 Testers</h3><p><img src="/img/blog/alpha/manny.jpg"/></p><p>With this new stage we decided to start fresh and restart our Tester subscriptions. Please check out <a href="/docs/signing-up-alpha">Sign Up for Alpha Testing</a> for more information on how to become a Tester.</p><p>If you already a Tester, please reach us in discord so you can get a Steam key. We will prioritize active members in the community!</p><h3>🔮 Future plans</h3><p>We&#x27;ve also created a new <a href="/docs/roadmap">Roadmap</a> page with all our plans and redirecting to our official Roadmap boards!</p><p>In the coming weeks we will gradually start distributing some Steam Keys and as soon we will release the first Steam update with a lot of new content!</p><p>Stay tuned! And thank you so much for all your support!</p>]]></content>
        <author>
            <name>Gabriel T. Nardy</name>
            <uri>https://twitter.com/gtnardy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Nova Docs]]></title>
        <id>new-docs</id>
        <link href="https://docs.nanos.world/pt-BR/blog/new-docs"/>
        <updated>2021-08-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Há algum tempo atrás, nós lançamos nossa nova versão da docs, escrita em Markdown! Estávamos usando os serviços do Gitbook para criar e hospedar, tivemos um grande salto da antiga versão, escrita com Sphinx.]]></summary>
        <content type="html"><![CDATA[<p><img src="/img/docs/new-docs.png"/></p><p>Há algum tempo atrás, nós lançamos nossa nova versão da docs, escrita em Markdown! Estávamos usando os serviços do Gitbook para criar e hospedar, tivemos um grande salto da antiga versão, escrita com Sphinx.</p><p>Desde então estivemos explorando outras possibilidades do mercado para docs, testamos Readme, ReType e até MdBook.</p><p>E então finalmente encontramos Docusaurus! Uma docs open source que permite muita customização, e inclusive tem muitas funcionalidades incluídas que podemos usar! Este é o próximo passo para o sucesso!</p><p>Veja todas as novas funcionalidades do post completo!</p><p><img src="https://d33wubrfki0l68.cloudfront.net/ea8e37a6a30e9c260a8936d95c579af4a2dd3df7/6ee7e/img/docusaurus_keytar.svg" alt="Docusaurus"/></p><h2>Novas Funcionalidades</h2><h3>Dark Mode!</h3><p>Nossos olhos agradecem! Agora podemos trocar do Light para Dark no canto superior direito da tela!</p><p><img src="/img/blog/new-docs/dark-mode.jpg"/></p><h3>Melhor Busca</h3><p>O Docusaurus fornece vários mecanismos de busca para usar, nós vamos iterar entre todos eles para encontrar o melhor!</p><p><img src="/img/blog/new-docs/search.jpg"/></p><h3>Versionamento</h3><p><img src="/img/blog/new-docs/versions.jpg"/></p><p>Agora nossa documentação pode ter versões diferentes! Com antecedência em relação a alguns planos que temos em mente, poderemos ter diferentes versões para serem lidas!</p><h3>Multi-idioma</h3><p>Agora suportamos várias línguas! A tradução é fornecida pelo Crowdin, uma solução baseada na nuvem que simplifica a localização! Todos podem colaborar em traduzir as páginas e até mesmo os posts do blog!</p><p><img src="/img/blog/new-docs/languages.jpg"/></p><p>Para isso, por favor, vá para <a href="https://crowdin.com/project/nanos-world-docs">nanos world official Crowdin</a>, crie uma conta e nos ajude a traduzir as páginas! Neste momento, temos Português, Alemão e Francês, mas é possível adicionar mais!</p><p><img src="/img/blog/new-docs/crowdin.jpg"/></p><h3>Página de blog!</h3><p>Você já deve estar lendo, mas agora podemos ter uma página blog integrada! Novidades sempre e toda hora!</p><h3>100% da personalização</h3><p>Podemos incorporar o poder do React no Markdown, permitindo modularizar e automatizar as criações de páginas! Menos esforço para nós! Também podemos criar nossos próprios Componentes melhorando muito o UX!</p><p>Fique atento porque nas próximas semanas vamos fazer GRANDES anúncios!</p><p>Aproveite e nos dê um feedback!</p>]]></content>
        <author>
            <name>Gabriel T. Nardy</name>
            <uri>https://twitter.com/gtnardy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Atualização do Sandbox]]></title>
        <id>sandbox</id>
        <link href="https://docs.nanos.world/pt-BR/blog/sandbox"/>
        <updated>2021-06-18T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p><img src="/img/blog/updates/sandbox.jpg"/></p>]]></content>
        <author>
            <name>Gabriel T. Nardy</name>
            <uri>https://twitter.com/gtnardy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Atualização da Vault]]></title>
        <id>vault</id>
        <link href="https://docs.nanos.world/pt-BR/blog/vault"/>
        <updated>2021-04-03T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p><img src="/img/blog/updates/vault.jpg"/></p>]]></content>
        <author>
            <name>Gabriel T. Nardy</name>
            <uri>https://twitter.com/gtnardy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Atualização da Água]]></title>
        <id>water</id>
        <link href="https://docs.nanos.world/pt-BR/blog/water"/>
        <updated>2021-01-11T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p><img src="/img/blog/updates/water.jpg"/></p>]]></content>
        <author>
            <name>Gabriel T. Nardy</name>
            <uri>https://twitter.com/gtnardy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Atualização dos Veículos]]></title>
        <id>vehicles</id>
        <link href="https://docs.nanos.world/pt-BR/blog/vehicles"/>
        <updated>2020-12-21T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p><img src="/img/blog/updates/transformers.jpg"/></p>]]></content>
        <author>
            <name>Gabriel T. Nardy</name>
            <uri>https://twitter.com/gtnardy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Halloween]]></title>
        <id>halloween</id>
        <link href="https://docs.nanos.world/pt-BR/blog/halloween"/>
        <updated>2020-10-24T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p><img src="/img/blog/updates/halloween.jpg"/></p>]]></content>
        <author>
            <name>Gabriel T. Nardy</name>
            <uri>https://twitter.com/gtnardy</uri>
        </author>
    </entry>
</feed>