<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>nanos world Blog</title>
        <link>https://docs.nanos.world/fr/blog</link>
        <description>nanos world Blog</description>
        <lastBuildDate>Wed, 01 Dec 2021 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <item>
            <title><![CDATA[November: Unreal Engine 5?]]></title>
            <link>https://docs.nanos.world/fr/blog/november-2021</link>
            <guid>november-2021</guid>
            <pubDate>Wed, 01 Dec 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[New Classes, Unreal Engine 5 Experiments and Scripting Improvements!]]></description>
            <content:encoded><![CDATA[<p>New Classes, Unreal Engine 5 Experiments and Scripting Improvements!</p><h2>New Class: <a href="/docs/scripting-reference/classes/decal">Decal</a></h2><p><img src="/img/blog/november/decal.jpg"/></p><p>We&#x27;ve added a new class to spawning <strong>Decals</strong>! Decals are Materials that are projected onto meshes in your level, including Static Meshes and Skeletal Meshes. You can load any <code>.jpg</code> from disk during runtime and use it as parameter in your Decal Material!</p><p>As Decals are inherited from Actors, you can change it&#x27;s location, rotation, attach it or call any method from <a href="/docs/scripting-reference/classes/base-classes/actor">Base Actor</a> on it!</p><h2>New Class: <a href="/docs/scripting-reference/classes/billboard">Billboard</a></h2><p><img src="/img/blog/november/billboard.jpg"/></p><p>We&#x27;ve added another new class to spawning <strong>Billboards</strong>! A Billboard is a 2D Material that will be rendered always facing the camera. It&#x27;s possible to use all custom methods from Paintable as well and spawning custom textures on it. You can tweak it&#x27;s material properties with <a href="/docs/scripting-reference/classes/base-classes/paintable">Base Paintable</a> or even use a material of your own.</p><p>As Billboards are inherited from Actors, you can change it&#x27;s location, rotation, attach it or call any method from <a href="/docs/scripting-reference/classes/base-classes/actor">Base Actor</a> on it!</p><h2>New Class: <a href="/docs/scripting-reference/classes/melee">Melee</a></h2><p><img src="/img/blog/november/melee.jpg"/></p><p>We are getting a brand new very-requested class: <strong>Melee</strong>! The Melee is coming to replace the former <strong>Item</strong> class.</p><p><strong>Melee</strong> is a new Class (which works exactly as the old <strong>Item</strong>) but now with ability to attack with it. It is possible to add custom animations, a cooldown and tweak the damage of it. The attack physics is procedurally based on the animation, this means you can stab, slash or even smash things only by changing the animation and then the hit will be based on that!</p><p>The results are quite fun, the hit/damage also affects the environment dynamically 😊</p><video controls="" allowfullscreen="true"><source src="/videos/blog/november/melee.mp4" type="video/mp4"/></video><h2>Scripting Improvements</h2><p>We&#x27;ve listen to your demand and we&#x27;re finally bringing long-awaited new amazing scripting features!</p><h3>Real Hot Reload</h3><p><img src="/img/blog/november/hotreload.jpg"/></p><p>After several requests, we&#x27;ve started implementing a real Hot Reload feature!</p><p>The real <strong>Hot Reloading</strong> is an amazing feature which allows you loading new scripting code without needing to lose all the current memory state of your Packages. It works by loading the scripting files over the current running Lua VM.</p><p>Currently it works by manually triggering it in the console:</p><pre><code class="language-bash">package hotreload [PACKAGE_NAME|all]
</code></pre><p>This will update the clients with the newer files version and load the <code>Index.lua</code> files from the packages. It will keep the current memory state of the packages as it is. It will also unsubscribe from all registered Events in that package.</p><p>In the future, it would be possible to add a real-time checker to automatically update the modified files after saving them.</p><h3>Extending Classes</h3><p><img src="/img/blog/november/extending.jpg"/></p><p>A new cool feature that is being added is Extending and Inheriting nanos world Classes. <em>This is still experimental and we want to collect your feedback and find remaining bugs.</em></p><p>It is now possible to <strong>Add new Methods</strong> to nanos world Classes, <strong>Override existing Methods</strong> and even <strong>Override <strong>index and </strong>newindex</strong>.</p><p>Adding a new method to a class is easy like this:</p><pre><code class="language-lua">-- Adding a new method &#x27;AddScore&#x27; to Player class
function Player:AddScore(score)
    self:SetValue(&quot;score&quot;, self:GetValue(&quot;score&quot;, 0) + score)
end

-- Using it
my_player:AddScore(10)
</code></pre><p>Read the full documentation <a href="/docs/core-concepts/scripting/extending-classes">here</a>.</p><h2>New View Mode: TopDown</h2><p>We created a new native View Mode: <strong>TopDown</strong>!</p><p>This ViewMode allows you to fully control Characters from a TopDown perspective.</p><p>With just a single line:</p><pre><code class="language-lua">my_character:SetViewMode(ViewMode.TopDown)
</code></pre><p>nanos world becomes a completely different game, the mouse is now a crosshair which the Character aims to. Mechanics of picking up Weapons, grabbing Props and interacting with stuff was slightly modified to work with the ViewMode. Also driving is fully supported as well! 🤩</p><p>It also is possible to dynamically change the view mode and switch between them during game-play and also tweak settings such as camera distance and so on.</p><video controls="" allowfullscreen="true"><source src="/videos/blog/november/top-down.mp4" type="video/mp4"/></video><h2>New Camera Methods</h2><p>Player got a bunch of new Camera methods: <code>Player:SetCameraSocketOffset()</code>, <code>Player:SetCameraArmLength()</code>.</p><p>And also ability to detach and attach it to other actors (👀 including Props): <code>Player:AttachCameraTo()</code> and <code>Player:ResetCamera()</code>. It will attach including a Camera SpringArm component!</p><p>Note: <strong>Spectate</strong> methods from <strong>Client</strong> has been moved to <strong>Player</strong>: <code>Player:Spectate()</code>.</p><h2><a href="/docs/scripting-reference/classes/text-render">TextRender</a> on Server Side</h2><p>Now the Class <code>TextRender</code> now can be spawned on Server Side as well!</p><h2>Other Changes</h2><p>Besides the major topics covered here, we&#x27;ve got several other new features which were been added during the month:</p><ul><li>Added a new method for Character: <code>Character:Follow()</code> which will make the AI follow other actor.</li><li>Added a new Utils method: <code>NanosUtils.Benchmark()</code> which will take a function as parameter and test the performance of it.</li><li>Now <code>Subscribe</code> will return the callback function (which can be used to Unsubscribe afterwards).</li><li>Fixed tons of bugs, detailed information can be found in the Discord Changelog channel.</li></ul><h2>Unreal Engine 5</h2><p><img src="/img/blog/november/ue5.jpg"/></p><p>Lastly, it is already known we have a big objective of porting nanos world to Unreal Engine 5. Personally this is something I wanted to do as soon as possible because Unreal Engine 5 features are amazing, not to mention the publicity and marketing bonuses we would get for nanos world.</p><p>In this month, we decided to give a try: we tested porting nanos world to Unreal 5, at first we had some problems because of some Unreal modules have been completely renamed or even removed. And also we got some Unreal methods deprecated by the newer version, so we needed to update them and even reimplement some small stuff.</p><p>Currently Unreal Engine 4 uses PhysX physics and in Unreal 5 all the Physics Engine have been replaced by <a href="https://docs.unrealengine.com/5.0/en-US/PhysicsFeatures/ChaosVSPhysxOverview/">Unreal&#x27;s Chaos</a>, which is a new Engine replacing the NVIDIA&#x27;s PhysX.</p><p>This made us need to disable Vehicles for this test, as Unreal vehicles are very dependent on the PhysX engine and I would need to reimplement them using the new Chaos API for vehicles (I believe that our Vehicles API will need to change a bit as well once we fully update it).</p><p>But after half of dozen adaptions and disabled Vehicles, the results were surprisingly good! nanos world worked on Unreal Engine 5! Personally I got very happy and proud that the biggest problems I had was updating deprecate methods and updating some Unreal modules, thanks to the architecture developed so far in nanos world!</p><h3>Graphical Results</h3><p>nanos world on Unreal Engine 5 is beautiful, joying with Lumen and Global Illumination is really fun!</p><p>There were some graphical artifacts (such as changing the time of day too fast causing a delay/ghosting effect), but I believe they will improve them for the final Unreal Engine 5 version.</p><p>Check it out some screenshots taken during the tests trying the Global Illumination and Lumen:</p><p><img src="/img/blog/november/ue5-outside.jpg"/></p><p><img src="/img/blog/november/ue5-inside-gas-01.jpg"/></p><p><img src="/img/blog/november/ue5-inside-gas-02.jpg"/></p><p><img src="/img/blog/november/ue5-inside-flash-01.jpg"/></p><p><img src="/img/blog/november/ue5-inside-flash-02.jpg"/></p><p><img src="/img/blog/november/ue5-inside-flash-03.jpg"/></p><h3>Stability</h3><p>Unfortunately the stability was extremely bad. It didn&#x27;t surprise me too much as Unreal Engine 5 is on Early Access, so bugs and crashes would happen. Several random crashes occurred during gameplay, I could notice mostly of them were caused by the new Chaos Engine (related to Physics).</p><h3>What now?</h3><p>I was really happy in being able to port nanos world to Unreal Engine 5, this attempt made us be sure that this would be possible. But I decided that currently is not time yet. During the tests we had several crashes (random ones, related to the low-level of Unreal, mainly coming from Chaos Engine and from Water) that made us conclude that is better to wait a better stable version because it makes nanos world really unplayable. Those random crashes are extremely bad as sometimes it&#x27;s hard to know if it&#x27;s my or Unreal&#x27;s fault.</p><p>Fortunately, with this we could prove ourselves that nanos world will, when the time comes, be compatible and updated to Unreal Engine 5!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[October: Alpha released!]]></title>
            <link>https://docs.nanos.world/fr/blog/alpha-released</link>
            <guid>alpha-released</guid>
            <pubDate>Wed, 03 Nov 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[We proudly present...]]></description>
            <content:encoded><![CDATA[<p><img src="/img/blog/alpha/alpha-release.jpg"/></p><p>We proudly present...</p><p>...The big long list of Alpha updates!</p><h2>Initial Thoughts</h2><p>Thank you everyone for all the support this last month! Our community has grown a lot and it&#x27;s lovely to see how nice and friendly it is becoming 🥰!</p><p>The Playtest session in the Sunday was amazing! We were able to test the stability of the game very well. I can say that most of the crashes we had were related to external integration issues (WebUI or Unreal itself), which shows a great maturity of our Core system. I think about doing it more often, it was a lot of fun playing Halloween mode and testing the community game-modes!</p><p>From now on, all updates will start to be versioned (finally!), small updates/non break-changes will get a PATCH version and break-changing will get a MINOR version.</p><p>:::note</p><p>The following changelog contains all features since last officially announced release 0.73.0. Many of the next items were already in the bleeding-edge branch.</p><p>::: <iframe class="steam-widget" src="https://store.steampowered.com/widget/1686450/" frameborder="0" width="620" height="190" loading="lazy" mark="crwd-mark"></iframe></p><h2>Materials</h2><p><img src="/img/blog/alpha/material.jpg"/></p><p>Now nanos world supports Materials Assets! 🎨</p><p>This means you can configure your own materials in your Assets.toml and reference them using <a href="/docs/scripting-reference/classes/base-classes/paintable">Paintable</a> methods!</p><p>The function <code>:SetDefaultMaterial()</code> has been replaced with <code>:SetMaterial()</code>. You can see a list of all built-in Materials read to use <a href="/docs/next/assets-modding/default-asset-pack/default-materials">here</a>.</p><p>Also it is now possible to get the WebUI material and set it to any surface (read more below)!</p><p>Some existing methods are suffering a rework due that, e.g. <a href="/docs/scripting-reference/classes/base-classes/pickable">Pickables</a> got a new method <code>:SetCrosshairMaterial()</code>, so you can set the Crosshair from a Material (and not from a predefined list anymore), also all old Crosshair have been converted into materials which you can find <a href="/docs/scripting-reference/classes/base-classes/pickable#list-of-crosshairs-materials-included-in-default-asset-pack">here</a>.</p><h2>Improved WebUI</h2><p><img src="/img/blog/alpha/webui.jpg"/></p><p>The <a href="/docs/scripting-reference/classes/webui">WebUI</a> received several improvements, including the ability to run HTML5 Audio and Videos! 📽</p><p>:::caution</p><p>We are using a Beta version of Ultralight, which supports Audio and Video, crashes <strong>WILL</strong> happen, also the Audio is currently 2D only. Ultralight is working on a solution so I can implement 3D audio.</p><p>:::</p><p>The <strong>WebUI</strong> constructor received some new parameters: <strong>is_transparent</strong>, <strong>auto_resize</strong>, <strong>width</strong> and <strong>height</strong>. Width and Height will only be used if Auto Resize is <strong>OFF</strong>, this is useful if you want to spawn a WebUI to use as Material to any surface (and don&#x27;t want it to be the size of the screen).</p><p>Also it received new methods: <a href="/docs/scripting-reference/classes/webui#setfreeze">:SetFreeze()</a>, <a href="/docs/scripting-reference/classes/webui#resize">:Resize()</a> and <a href="/docs/scripting-reference/classes/webui#setautoresize">:SetAutoResize()</a>.</p><p>A new Searcher has been added onto it, improving how it can load your .html files, they are now looked in the following order:</p><ol><li>Relative to <code>current-file-path/</code></li><li>Relative to <code>current-package/Client/</code></li><li>Relative to <code>current-package/</code></li><li>Relative to <code>Packages/</code></li></ol><p>It is now possible to spawn a Material from a WebUI, which renders dynamic and automatically into <strong>any</strong> surface: <code>:SetMaterialFromWebUI()</code> (method from Actors).</p><h2>Actors</h2><p>New additions for <a href="/docs/scripting-reference/classes/base-classes/actor">Actors</a>:</p><ul><li>Added new method for all actors: <a href="/docs/scripting-reference/classes/base-classes/actor#setlifespan">:SetLifeSpan(time)</a> which will automatically destroy this actor after <code>time</code> seconds.</li><li>Added new method for all actors: <a href="/docs/scripting-reference/classes/base-classes/actor#isbeingdestroyed">:IsBeingDestroyed()</a> which will return if this actor is being destroyed (useful to check from inside other Events such as <code>Drop</code> or <code>Ungrab</code>).</li><li>Added new parameter for all actors <a href="/docs/scripting-reference/classes/base-classes/actor#attachto">:AttachTo()</a> method: <code>lifespan_when_detached</code>, which will destroy the actor after <code>time</code> seconds after it&#x27;s detached.</li><li>Now event <a href="/docs/scripting-reference/classes/base-classes/actor#takedamage">TakeDamage</a> has a new argument: <code>causer</code> (the object/actor which caused the damage). Also added new damage types: <code>RunOverVehicle</code> and <code>RunOverProp</code>.</li><li>Now event <a href="/docs/scripting-reference/classes/base-classes/actor#hit">Hit</a> has new arguments: <code>impact_force</code>, <code>normal_impulse</code>, <code>impact_location</code> and <code>velocity</code>.</li><li>Now <a href="/docs/scripting-reference/classes/base-classes/actor#setlocation">:SetLocation()</a> will try to find the better spot to teleport the Actor (to avoid collisions).</li></ul><h2>Character</h2><p><img src="/img/blog/alpha/character.jpg"/></p><p>New additions for <a href="/docs/scripting-reference/classes/character">Characters</a>:</p><p><strong>Character Methods additions/improvements:</strong></p><ul><li>Added several new Getters from it&#x27;s properties.</li><li>Added <a href="/docs/scripting-reference/classes/character#setdamagemultiplier">:SetDamageMultiplier()</a> change the damage multiplier depending on the bone damaged.</li><li>Added <a href="/docs/scripting-reference/classes/character#sethiddenbone">:SetHiddenBone()</a> to make invisible any part of the body.</li><li>Added <a href="/docs/scripting-reference/classes/character#setjumpzvelocity">:SetJumpZVelocity()</a> to make the character jump higher.</li><li>Improved <a href="/docs/scripting-reference/classes/character#playanimation">:PlayAnimation()</a> got new parameters (blend times, loop and play rate), and now it supports loading any type of animation (Montage or Sequence).</li><li>Removed <code>:SetInitialLocation()</code>, it has been replaced with <a href="/docs/scripting-reference/classes/character#respawn">:Respawn()</a>.</li></ul><p><strong>Character Events additions/improvements:</strong></p><ul><li>Added <a href="/docs/scripting-reference/classes/character#attemptentervehicle">AttemptEnterVehicle</a> called when Character tries to enter a vehicle, returns false to prevent it.</li><li>Added <a href="/docs/scripting-reference/classes/character#attemptleavevehicle">AttemptLeaveVehicle</a> called when Character tries to leave a vehicle, returns false to prevent it.</li><li>Added <a href="/docs/scripting-reference/classes/character#attemptreload">AttemptReload</a> called when Character tries to reload it&#x27;s weapon, returns false to prevent it.</li><li>Added <a href="/docs/scripting-reference/classes/character#interact">Interact</a> called when Characters tries to Pick Up a Pickable or Grab a Prop.</li><li>Added <a href="/docs/scripting-reference/classes/character#highlight">Highlight</a> called when Characters looks at a Prop or Pickable being able to pick up it.</li></ul><p>Some Characters animations have been renamed from <code>AM_</code> to <code>A_</code> in the Default Asset Pack (as they are not Montages anymore). Also lots of new Animations have been added.</p><h2>Weapons</h2><p><img src="/img/blog/alpha/weapon.jpg"/></p><p>New additions for <a href="/docs/scripting-reference/classes/weapon">Weapons</a>:</p><p><strong>Weapon Methods additions/improvements:</strong></p><ul><li>Added several new Getters from it&#x27;s properties.</li><li>Added <a href="/docs/scripting-reference/classes/weapon#setrecoil">:SetRecoil()</a> how much the weapon recoils physically.</li><li>Added <a href="/docs/scripting-reference/classes/weapon#setwallbangsettings">:SetWallbangSettings()</a> configure if bullets wallbangs walls.</li><li>Added <a href="/docs/scripting-reference/classes/weapon#setanimationfire">:SetAnimationFire()</a> animation on Weapon Skeletal when firing.</li><li>Added <a href="/docs/scripting-reference/classes/weapon#setsoundfirelastbullets">:SetSoundFireLastBullets()</a> sound when <code>N</code> last bullets are remaining in the clip.</li><li>Improved <a href="/docs/scripting-reference/classes/weapon#setanimationreload">:SetAnimationReload()</a> now has <code>play_rate</code> parameter.</li></ul><p><strong>Additional stuff:</strong></p><ul><li>Now weapons are hidden when Characters are driving.</li><li>Added sounds of Shell Dropping &amp; hitting the ground for the built-in Shell particles (this is a procedural and 100% precise sound 😉).</li><li>Added sounds when picking up or dropping weapons, also it will slightly throw the weapon to the front when dropping it.</li></ul><h2>Grenades</h2><p><img src="/img/blog/alpha/grenade.jpg"/></p><p>All Properties from <a href="/docs/scripting-reference/classes/grenade">Grenades</a> have been deprecated, now access must be done through Methods.</p><p>We&#x27;ve added a special Particle for Grenades <code>nanos-world::P_Grenade_Special</code> which will explode different particles depending on the ground the grenade is. I.e. will explode a &quot;grass explosion&quot; particle if grenade is over a grass surface, and a &quot;water explosion&quot; particle if it&#x27;s under water. <strong>Note:</strong> This particle only works for Grenades.</p><h2>Sounds</h2><p><img src="/img/blog/alpha/sound.jpg"/></p><p>New additions for <a href="/docs/scripting-reference/classes/sound">Sounds</a>:</p><p>Now it is possible to load <code>.ogg</code> sounds at runtime! You can store them in any Package or Asset Pack and load it using our new pattern for <code>SpecialPath</code> (<code>assets///asset-pack-name/path.ogg</code> or <code>package///package-name/path.ogg</code>).</p><p>Added <code>loop_mode</code> parameter to constructor (can loop any sound forever now).</p><p>Also, it is possible to pass <code>.ogg</code> using the SpecialPath in any Sound parameter.</p><p><strong>Sound Methods additions/improvements:</strong></p><ul><li>Added <a href="/docs/scripting-reference/classes/sound#getduration">:GetDuration()</a>.</li><li>Improved <a href="/docs/scripting-reference/classes/sound#fadein">:FadeIn()</a> and <a href="/docs/scripting-reference/classes/sound#fadeout">:FadeOut()</a> parameters.</li></ul><h2>Input</h2><p><img src="/img/blog/alpha/input.jpg"/></p><p>Added a new class: <a href="/docs/scripting-reference/static-classes/input">Input</a>!</p><p>Now you can control, create and customize KeyBindings in a proper way! Example:</p><pre><code class="language-lua">-- Registers the binding_name &#x27;SpawnMenu&#x27; with default key &#x27;Q&#x27;
-- This will add &#x27;SpawnMenu&#x27; to user KeyBinding Settings automatically
Input.Register(&quot;SpawnMenu&quot;, &quot;Q&quot;)

-- Subscribes for Pressing the key
Input.Bind(&quot;SpawnMenu&quot;, InputEvent.Pressed, function()
    -- Opens the Spawn Menu
end)

-- Subscribes for Releasing the key
Input.Bind(&quot;SpawnMenu&quot;, InputEvent.Released, function()
    -- Closes the Spawn Menu
end)
</code></pre><h2>HTTP</h2><p><img src="/img/blog/alpha/http.jpg"/></p><p>Added a new class: <a href="/docs/scripting-reference/static-classes/http">HTTP</a>!</p><p>Now we have a proper standalone class for making HTTP requests. Is also features Async HTTP requests (and thread safe!)</p><h2>Performance Optimization</h2><p><img src="/img/blog/alpha/performance.jpg"/></p><p>We have worked hard on performance techniques for Alpha update. Here&#x27;s the highlights:</p><ul><li>Now Basic Structs <a href="/docs/scripting-reference/utility-classes/vector">Vector</a> and <a href="/docs/scripting-reference/utility-classes/rotator">Rotator</a> are automatically compressed when sending through the Network. Reducing it&#x27;s size up to 90% in the best case! This was a great gain for network use.</li><li>A new setting was added <code>Profiling</code> which you can enable with <code>--profiling</code> on server and in Settings on Client. This will log all the time elapsed to run operations/scripting events and some other stuff in the Console.</li><li>Now HTTP requests (a.k.a. downloading files when joining a server) are automatically compressed, which may reduce the network usage when downloading big files!</li><li>Now Actors which are very far or not on screen will be synchronized/updated half the time to improve performance. We still want to tweak it and make it more aggressive on some cases.</li><li>The Assets Loading system have been reworked and is much faster now.</li><li>Small <a href="/docs/scripting-reference/classes/prop">Props</a> (radius &lt; 200) will not collide with players or dynamic objects anymore. Also Bigger props will have CCD disabled by default (which drastically improved performance), this can be enabled in the Prop constructor.</li><li>Now VOIP uses Steam system, which provides a great compression and also custom settings through Shift+Tab menu.</li><li>Several improvements were made on our low-level Lua code to boost scripting performance.</li></ul><h2>Server</h2><p>New additions to <a href="/docs/scripting-reference/static-classes/server">Server</a> static class:</p><ul><li>Added new console command: <code>map [MAP_NAME]</code> to change the game map, this will also reload all packages and reconnect all players (like restarting the server).</li><li>Added new methods <a href="/docs/scripting-reference/static-classes/server#getversion">Server.GetVersion()</a>, <a href="/docs/scripting-reference/static-classes/server#getip">Server.GetIP()</a>, <a href="/docs/scripting-reference/static-classes/server#getport">Server.GetPort()</a>, <a href="/docs/scripting-reference/static-classes/server#getqueryport">Server.GetQueryPort()</a> and several missing getters.</li></ul><h2>Client</h2><p>New additions to <a href="/docs/scripting-reference/static-classes/client">Client</a> static class:</p><ul><li>New parameters have been added to <a href="/docs/scripting-reference/static-classes/client#setcameralocation">Client.SetCameraLocation()</a> and <a href="/docs/scripting-reference/static-classes/client#setcamerarotation">Client.SetCameraRotation()</a> to enable smooth movements with camera in a certain time.</li><li>New methods for drawing debug shapes in 3D world: <a href="/docs/scripting-reference/static-classes/client#drawdebug">Client.DrawDebug...()</a>.</li><li>Changed <a href="/docs/scripting-reference/static-classes/client#sethighlight">Client.SetHighlight()</a> parameters, now it takes a Enum to define how the highlight will be.</li><li>Added new method <a href="/docs/scripting-reference/static-classes/client#setsteamrichpresence">Client.SetSteamRichPresence()</a> to customize the message in Steam Friends list.</li></ul><p>Now when joining a server, a Progress Bar will be displayed in the Taskbar, and also it will Flash once the loading is done:</p><p><img src="/img/blog/alpha/progress-taskbar.jpg"/></p><h2>In-game Console</h2><p>Now it is possible to access Server Console from within the game!</p><p>If you open it, 2 tabs will appear: <strong>client</strong> and <strong>server</strong>. You can read all server logs, and also input commands.</p><p>:::note</p><p>Not all logs will appear in there, only the ones outputted while you are connected to the server.</p><p>:::</p><p><img src="/img/blog/alpha/console.jpg"/></p><h2>Timer</h2><p>New additions to <a href="/docs/scripting-reference/static-classes/timer">Timer</a>:</p><ul><li>Added new method: <a href="/docs/scripting-reference/static-classes/timer#bind">Timer.Bind(timer_id, actor)</a> - this will associate a timer to an actor, when the actor is destroyed, this timer is destroyed too and will never be called.</li><li>Added new method: <a href="/docs/scripting-reference/static-classes/timer#isvalid">Timer.IsValid(timer_id)</a>.</li></ul><h2>CLI</h2><ul><li>Now it is possible to download multiple Assets/Packages at once with <a href="/docs/core-concepts/server-manual/nanos-world-cli">CLI</a>, just separate them by spaces, e.g.: <code>cli assets install quaternius city-park</code>.</li></ul><h2>Steam Achievements</h2><p><img src="/img/blog/alpha/achievements.jpg"/></p><p>With Steam integration, we are making use of every feature possible it allows 😅!</p><p>And this includes the <strong>Achievements</strong>! We are counting on the support of a talented friend <a href="https://www.instagram.com/estherhoffmann/">Esther</a> who is drawing the amazing arts for them!</p><p>Little by little we will be creating more achievements and releasing them! We also count on your ideas for more!</p><h2>Scripting Improvements</h2><ul><li><p>Added new Searchers to <a href="/docs/scripting-reference/static-classes/package#require">Package.Require()</a>, we now currently support 5 searchers, which are looked in the following order:</p><ol><li>Relative to <code>current-file-path/</code></li><li>Relative to <code>current-package/Client/</code> or <code>current-package/Server/</code> <em>(depending on your side)</em></li><li>Relative to <code>current-package/Shared/</code></li><li>Relative to <code>current-package/</code></li><li>Relative to <code>Packages/</code></li></ol></li><li><p><a href="/docs/scripting-reference/static-classes/package#require">Package.Require()</a> now can be called in runtime and at any moment.</p></li><li><p><a href="/docs/scripting-reference/static-classes/package#requirepackage">Package.RequirePackage()</a> now will load a package as a library inside the current package, it means the package loaded will now be automatically sent to clients, and all paths it loads is relative to the package itself (and not to the one which is requiring it anymore).</p></li><li><p>Verbose logs will now display the current thread ID.</p></li></ul><h2>Renamed Default Packages</h2><p>The default Packages <code>NanosWorldWeapons</code> and <code>NanosWorldVehicles</code> were renamed to <code>nanos-world-weapons</code> and <code>nanos-world-vehicles</code>, following the new correct pattern for Packages and Assets names. Including them now should be made like <code>Package.RequirePackage(&quot;nanos-world-weapons&quot;)</code>, the usage keeps the same (<code>NanosWorldWeapons.AK47()</code>).</p><h2>General Changes</h2><ul><li><a href="/docs/scripting-reference/classes/cable">Cable</a> got new methods: <code>:GetAttachedStartTo()</code> and <code>:GetAttachedEndTo()</code> to get if it&#x27;s attached at any end.</li><li><a href="/docs/scripting-reference/classes/player">Player</a> got new methods: <code>:SetVOIPVolume()</code>, <code>:GetSteamID()</code>,</li><li><a href="/docs/scripting-reference/classes/base-classes/pickable">Pickables</a> got new events: <code>ReleaseUse</code>, <code>PullUse</code> when Character pulls or releases its usage (i.e. trigger for weapons)</li><li>Improved the way the interact trigger enables for <a href="/docs/scripting-reference/classes/base-classes/pickable">Pickables</a> and <a href="/docs/scripting-reference/classes/prop">Props</a>.</li><li><a href="/docs/scripting-reference/classes/trigger">Trigger</a> got new method: <code>:ForceOverlapChecking()</code> which will checks for overlaps in the game thread and immediately dispatch events.</li><li>Added new methods for <a href="/docs/scripting-reference/utility-classes/quaternion">Quaternions</a> (+, -, Normalize).</li><li>Added new method for generating a random <a href="/docs/scripting-reference/utility-classes/rotator">Rotator</a>: <code>Rotator.Random()</code>.</li><li>Added lots of new Sounds, Animations, Props, Meshes in the Default Asset Pack.</li><li>Added Steam Login.</li><li>All .config files had it&#x27;s <code>tabs</code> replaced with <code>spaces</code>.</li><li><code>.GetPairs()</code> now only supports <code>pairs</code>.</li><li>Added Resolutions graphic settings.</li><li>Make Day button from In-game menu has been removed.</li><li>Added new Splash Effects when Props or objects enter the Water.</li><li><code>:GetValue()</code> now has an additional parameter: <code>fallback</code> which will be returned if the value doesn&#x27;t exist.</li><li>Probably many other things that were being added and were forgotten 😜.</li></ul><h2>Bug Fixes</h2><ul><li>Fixed <code>World.SetFogDensity()</code> not working.</li><li>Fixed <code>Client.SetCameraLocation</code> not working.</li><li>Fixed <code>Actors.RotateTo()</code> not doing properly math.</li><li>Fixed <code>StaticMesh.GetBounds()</code> not working.</li><li>Fixed Cables methods being able to be called on client side.</li><li>Fixed several <strong>Character</strong> properties not syncing.</li><li>Fixed a crash when changing Map at runtime.</li><li>Fixed Characters not reseting the life to <code>max_health</code> when Respawning.</li><li>Fixed dead ragdolls still moving around (from <code>MoveTo()</code>).</li><li>Fixed infinite recursion with <code>LogEntry</code> event.</li><li>Fixed <strong>Characters</strong> Morph Targets not syncing.</li><li>Fixed Discord custom integration not working sometimes.</li><li>Fixed a crash when a player had no Steam Profile image.</li><li>Fixed Server Announce checkbox being disabled when unchecked on New Game screen.</li><li>Fixed a crash when destroying entities from inside <code>Interact</code> event.</li><li>Fixed hell lot of other Crashes 💥. Thanks for the Crash Reports!</li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Amélioration des armes]]></title>
            <link>https://docs.nanos.world/fr/blog/weapons-improvements</link>
            <guid>weapons-improvements</guid>
            <pubDate>Wed, 06 Oct 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[L'un de nos principaux objectifs pour nanos world est de s'amuser, et nous pensons que les petits détails sont le grand soutien pour que l'expérience soit complète. Au cours des dernières semaines, nous avons travaillé à l'amélioration et à l'ajout de petites fonctionnalités aux actions courantes telles que tirer, ramasser des objets et même à la façon dont vous percevez leur déroulement. Voici les points forts !]]></description>
            <content:encoded><![CDATA[<p>L&#x27;un de nos principaux objectifs pour nanos world est de s&#x27;amuser, et nous pensons que les petits détails sont le grand soutien pour que l&#x27;expérience soit complète. Au cours des dernières semaines, nous avons travaillé à l&#x27;amélioration et à l&#x27;ajout de petites fonctionnalités aux actions courantes telles que tirer, ramasser des objets et même à la façon dont vous percevez leur déroulement. Voici les points forts !</p><h2>Nouvelles animations d&#x27;armes</h2><p>Depuis le début, nos armes étaient rigides au tir donnant une impression de rigidité et de manque de fluidité. Avec la simple amélioration consistant à ajouter des animations de tir à cela, regardez comme c&#x27;est mieux :</p><video controls="" allowfullscreen="true"><source src="/videos/blog/weapons-improvements/m1911.mp4" type="video/mp4"/></video><video controls="" allowfullscreen="true"><source src="/videos/blog/weapons-improvements/makarov.mp4" type="video/mp4"/></video><h2>Nouveaux effets pour les obus à balles</h2><p>En plus des nouvelles animations, nous avons ajouté un détail subtil : <strong>Bullet Shells Drop SFX</strong>. Et pas si simple que ça ! Le son est joué avec précision à l&#x27;endroit et au moment où les obus frappent le sol ou toute autre surface, écoutez :</p><video controls="" allowfullscreen="true"><source src="/videos/blog/weapons-improvements/bullet-shell-drop.mp4" type="video/mp4"/></video><p>Regardez une comparaison complète avant et après de certaines armes, vous pouvez remarquer toutes les améliorations en détail ! <iframe width="620" height="347" src="https://www.youtube-nocookie.com/embed/ln4AUntcyLM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" mark="crwd-mark"></iframe></p><br/><br/><p>Notez que les animations et la visée des armes de nanos world sont entièrement générées de manière procédurale, ce qui signifie que lorsque vous êtes à la première personne, l&#x27;emplacement du viseur de l&#x27;arme est calculé dynamiquement pour être positionné au milieu de vos yeux, dans un véritable mode première personne.</p><h2>Sons lors du ramassage d&#x27;objets</h2><p>Un détail sonore subtil a été ajouté lorsque vous saisissez et laissez tomber une arme, et aussi maintenant l&#x27;objet est légèrement projeté vers l&#x27;avant :</p><video controls="" allowfullscreen="true"><source src="/videos/blog/weapons-improvements/picking-up.mp4" type="video/mp4"/></video><h2>Lunettes de visée</h2><p>Il est très facile d&#x27;ajouter des objets attachables dans n&#x27;importe quelle arme, par exemple pour attacher une lunette de visée AWP, nous utilisons le mesh <code>SM_Scope_25x56</code> pour cela :</p><pre><code class="language-lua">-- Crée une arme AWP
local weapon = Weapon(location or Vector(), rotation or Rotator(), &quot;nanos-world::SK_AWP&quot;)

-- Attache un mesh statique de lunette de visée, avec un décalage configuré pour être parfaitement aligné
weapon:AddStaticMeshAttached(&quot;sight&quot;, &quot;nanos-world::SM_Scope_25x56&quot;, &quot;&quot;, Vector(20, 0, 11))

-- Ajuste l&#x27;emplacement du viseur pour placer le sniper à l&#x27;endroit exact où sera le centre de la lunette de visée lors de l&#x27;ADS
weapon:SetSightTransform(Vector(-15, 0, -4.6), Rotator(0, 0, 0))
</code></pre><video controls="" allowfullscreen="true"><source src="/videos/blog/weapons-improvements/sniper-scope.mp4" type="video/mp4"/></video><p>Il s&#x27;agit d&#x27;un processus entièrement procédural, qui utilise également les matériaux des lunettes de visée !</p><p>:::tip</p><p>Vous pouvez également consulter le <a href="https://github.com/nanos-world/nanos-world-weapons">Package d&#x27;armes officiel</a>, et voir comment un RedDot a été ajouté à un P90 !</p><p>:::</p><p>That&#x27;s it! Merci à tous !</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[September: Sandbox Improvements]]></title>
            <link>https://docs.nanos.world/fr/blog/sandbox-improvements</link>
            <guid>sandbox-improvements</guid>
            <pubDate>Fri, 01 Oct 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[De nombreuses améliorations ont été apportées au mode de jeu Sandbox le mois dernier, voici les principales !]]></description>
            <content:encoded><![CDATA[<p>De nombreuses améliorations ont été apportées au mode de jeu Sandbox le mois dernier, voici les principales !</p><h2>Amélioration de l&#x27;UI et de l&#x27;UX du menu &quot;Spawn&quot;</h2><p>Nous avons beaucoup réfléchi à la manière de rendre l&#x27;expérience du mode de jeu &quot;bac à sable&quot; encore meilleure. Et avec cela, nous avons apporté plusieurs améliorations, notamment l&#x27;ajout de catégories dans la barre latérale, de nouveaux onglets et même de nouvelles choses à frayer ! Sans compter que plusieurs corrections de bugs et l&#x27;ergonomie générale ont été améliorées ! Plus de bloquement du mouvement lors de l&#x27;ouverture du menu Spawn !</p><video controls="" allowfullscreen="true"><source src="/videos/blog/sandbox-improvements/new-sandbox-ui.mp4" type="video/mp4"/></video><h2>Nouveaux Props 📦</h2><p>Nous importons un gros paquet de props qui seront fournis avec le jeu de base.</p><p>Nous avons beaucoup débattu du seuil à ne pas franchir entre le fait de livrer le jeu avec plusieurs props ou de le livrer sans props et de permettre au joueur de télécharger ce qu&#x27;il veut depuis le Vault. C&#x27;est une décision difficile à prendre, mais pour l&#x27;instant nous avons décidé de livrer un pack de base avec quelques trucs sympas, notamment de nouveaux <strong>props de construction</strong>, <strong>fruits</strong>, <strong>outils</strong> et même de nouvelles <strong>armes</strong> !</p><p><img src="/img/blog/sandbox-improvements/new-props.jpg"/></p><h2>PNJs🤖</h2><p>Il est là depuis un certain temps, mais nous aimerions le mettre en évidence ! Dans le Spawn Menu, il y a maintenant un nouvel onglet qui permet de faire apparaître des PNJ.</p><p>Ces PNJ ont quelques fonctionnalités de base définies en Lua, ils marchent de façon aléatoire et s&#x27;enfuient même lorsqu&#x27;ils sont menacés ! C&#x27;est dingue !</p><video controls="" allowfullscreen="true"><source src="/videos/blog/sandbox-improvements/npcs.mp4" type="video/mp4"/></video><h2>Nouvelles armes 🔫</h2><p>Cela n&#x27;est pas strictement lié au mode de jeu Sandbox, mais en plus des nouveaux props, nous envoyons de toutes nouvelles armes configurées dans le package par défaut <code>nanos-world-weapons</code> !</p><p>Cela inclut un P90, un UMP-45, un pistolet M1911 et bien d&#x27;autres !</p><video controls="" allowfullscreen="true"><source src="/videos/blog/sandbox-improvements/new-weapons.mp4" type="video/mp4"/></video><h2>Motif d&#x27;armes 🎨</h2><p>En plus des catégories dans la partie gauche, nous commençons à ajouter une nouvelle section pour être notre &quot;rubrique optionnelle&quot;, nous avons commencé par ajouter une nouvelle option dans l&#x27;onglet Armes : <strong>Patterns</strong>.</p><p><img src="/img/blog/sandbox-improvements/weapon-pattern.jpg"/></p><p><img src="/img/blog/sandbox-improvements/weapon-pattern-floor.jpg"/></p><p><img src="/img/blog/sandbox-improvements/weapon-pattern-infernoo.jpg"/></p><p>Vous pouvez changer et sélectionner n&#x27;importe quel motif parmi les centaines inclus dans le jeu pour l&#x27;appliquer à votre arme (il est également synchronisé avec les autres joueurs) ! Il est très facile d&#x27;ajouter votre propre image <code>.jpg</code> comme motif dans le menu !</p><video controls="" allowfullscreen="true"><source src="/videos/blog/sandbox-improvements/weapons-pattern.mp4" type="video/mp4"/></video><h2>Props cassables 🍉</h2><p>C&#x27;est une fonctionnalité géniale sur laquelle j&#x27;ai travaillé ces dernières semaines, c&#x27;est quelque chose de 100% scripting, je ne suis pas encore sûr si cela doit devenir une chose intégrée.</p><video controls="" allowfullscreen="true"><source src="/videos/blog/sandbox-improvements/breakable-watermelon.mp4" type="video/mp4"/></video><p>Mais maintenant, dans sandbox, nous pouvons configurer les props pour qu&#x27;ils se brisent lorsqu&#x27;ils sont touchés ou qu&#x27;ils subissent des dégâts ! Il est également possible de configurer facilement les débris qui seront générés, l&#x27;aléatoire et bien plus encore, voir un exemple :</p><pre><code class="language-lua">SetBreakableProp(&quot;nanos-world::SM_Fruit_Watermelon_01&quot;, 700, {
    { mesh = &quot;nanos-world::SM_Fruit_Watermelon_01_Half_01&quot;, rotation = Rotator() },
    { mesh = &quot;nanos-world::SM_Fruit_Watermelon_01_Half_01&quot;, rotation = Rotator(180, 0, 0) },
    { mesh = &quot;nanos-world::SM_Fruit_Watermelon_01_Crust_01&quot; },
    { mesh = &quot;nanos-world::SM_Fruit_Watermelon_01_Slice_01&quot; },
    { mesh = &quot;nanos-world::SM_Fruit_Watermelon_01_Slice_01&quot; },
})
</code></pre><p>Et voilà, chaque fois qu&#x27;une pastèque apparaîtra dans le menu d&#x27;apparition, elle sera cassable !</p><h2>Props explosifs 💥</h2><p>Dans une sous-catégorie comme les props cassables, nous pouvons avoir des props explosifs ! Qui ne se briseront pas seulement s&#x27;ils subissent des dommages ou sont touchés, mais qui vont aussi EXPLOSER ! Causeront des dommages, et même déclencher une réaction en chaîne d&#x27;explosions !</p><video controls="" allowfullscreen="true"><source src="/videos/blog/sandbox-improvements/chain-explosions.mp4" type="video/mp4"/></video><video controls="" allowfullscreen="true"><source src="/videos/blog/sandbox-improvements/gas-house-explosion.mp4" type="video/mp4"/></video><video controls="" allowfullscreen="true"><source src="/videos/blog/sandbox-improvements/gas-explosion-danger.mp4" type="video/mp4"/></video><p>Comme vous pouvez le constater, il peut être très dangereux de jouer avec le feu ! 😅</p><h2>La suite ! 💡</h2><p>Nous travaillons actuellement à ce que tout soit prêt pour la sortie officielle de la version Alpha 1.0.0 ! Nous distribuons lentement des clés bêta à quelques testeurs, ce qui nous permet de corriger tranquillement les derniers bugs et de donner la touche finale avant le lancement complet !</p><p>Nous avons également implémenté BEAUCOUP de nouveau contenu pour le modding et scripting qui sera encore annoncé dans les prochaines semaines ! Cela fera une liste de changements ÉNORME et je vais probablement mettre en évidence toutes les fonctionnalités dans les actualités séparées !</p><p>C&#x27;est tout pour ce blog ! Merci beaucoup pour tout votre soutien ! 🥰</p><video controls="" allowfullscreen="true"><source src="/videos/blog/sandbox-improvements/watch-teaser.mp4" type="video/mp4"/></video>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Nanos World arrive en Alpha!]]></title>
            <link>https://docs.nanos.world/fr/blog/Alpha</link>
            <guid>Alpha</guid>
            <pubDate>Wed, 01 Sep 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Beaucoup de temps se sont passés depuis le début du développement de Nanos World. À la fin 2017, nous avons commencé à réfléchir sur une idée ambitieuse, nous avons rêvé de créer une expérience de jeu bac à sable à monde ouvert sans les limites de développement de jeux-vidéos comme Just Cause 3 ou Grand Theft Auto. Alors, nous avons décidé de créer un jeu de zéro, mais nous avons commencé à travailler dur dessus à partir de mi-2019, c'était une idée très enthousiaste, mais après beaucoup d'effort, d'amour, et de passions. Nous y sommes! 🥰]]></description>
            <content:encoded><![CDATA[<p><img src="/img/blog/alpha/alpha-banner.jpg"/></p><p>Beaucoup de temps se sont passés depuis le début du développement de Nanos World. À la fin 2017, nous avons commencé à réfléchir sur une idée ambitieuse, nous avons rêvé de créer une expérience de jeu bac à sable à monde ouvert sans les limites de développement de jeux-vidéos comme Just Cause 3 ou Grand Theft Auto. Alors, nous avons décidé de créer un jeu de zéro, mais nous avons commencé à travailler dur dessus à partir de mi-2019, c&#x27;était une idée très enthousiaste, mais après beaucoup d&#x27;effort, d&#x27;amour, et de passions. Nous y sommes! 🥰</p><h2>Alpha 1.0.0!</h2><p>Et nous arrivons enfin à l&#x27;annonce tant attendue de l&#x27;Alpha ! Beaucoup de choses se sont passées, beaucoup d&#x27;itérations ont été faites (et beaucoup vont venir 😜) et grâce à tout le soutien de notre communauté et à vos commentaires, nous nous rapprochons de plus en plus de la sortie de nanos world !</p><p>La mise à jour officielle de la version Alpha 1.0.0 comprendra des tonnes de nouvelles concernant les scripts et les jeux !</p><h2>Steam!</h2><p><img src="/img/blog/alpha/steam-guy.jpg"/></p><p>En plus de l&#x27;annonce de l&#x27;Alpha, nous avons BEAUCOUP d&#x27;autres surprises ! Comme vous l&#x27;avez peut-être remarqué, maintenant <a href="https://store.steampowered.com/app/1686450/nanos_world">nanos world est sur STEAM</a> !!! Itch était très bon et nous a beaucoup aidés à l&#x27;époque, et nous serons toujours reconnaissants que leur service et leur assistance aient toujours été gratuits ! Mais nous avons ensuite pris la décision de passer à l&#x27;étape suivante, à savoir le passage à la plus grande plateforme de jeux !</p><p>:::tip</p><p>🎋S&#x27;il vous plait, n&#x27;oubliez pas d&#x27; <strong>Ajoutez à votre liste de souhait</strong> et partager <a href="https://store.steampowered.com/app/1686450/nanos_world">La page Steam : Nanos World</a>!</p><p>::: <iframe class="steam-widget" src="https://store.steampowered.com/widget/1686450/" frameborder="0" width="620" height="190" loading="lazy" mark="crwd-mark"></iframe></p><h2>Nouveau site internet!</h2><p><img src="/img/blog/alpha/new-website.jpg"/></p><p>Nous avons créé un tout nouveau site web qui contient de nombreuses informations sur le monde des nanos, ce qui nous aidera à le commercialiser ! Si vous ne l&#x27;avez pas encore fait, jetez un coup d&#x27;œil à <a href="https://nanos.world">https://nanos.world</a> !</p><h2>Beaucoup de nouvelles à venir !</h2><p>Entre-temps, depuis la dernière mise à jour (0.73.0), nous avons accumulé <strong> BEAUCOUP</strong> de nouveau contenu pour nanos world. La plupart d&#x27;entre elles n&#x27;ont pas pu être publiées car nous travaillions parallèlement à l&#x27;intégration de Steam.</p><h3>🔢 Versions</h3><p><img src="/img/blog/alpha/betas.jpg"/></p><p>Avec l&#x27;arrivée de Steam, il y aura plusieurs changements dans la façon dont nous distribuons les mises à jour ! Nous aurons maintenant deux branches <code>stable/latest</code> et <code>bleeding-edge</code>, nous avons l&#x27;intention de garder la branche par défaut aussi stable que possible, tout en travaillant dans le contenu à venir dans la <em>branche bleeding-edge</em>.</p><p>Par défaut, tous les testeurs auront accès à <em>bleeding-edge</em> pour pouvoir nous aider à tester les nouvelles fonctionnalités avant de les diffuser officiellement ! De plus, dans la documentation, nous allons avoir deux versions qui représentent chacune des branches !</p><p>:::info</p><p>La version <strong>a1.0.0</strong> est déjà présente dans la branche <em> bleeding-edge</em> et va bientôt venir dans la branche <em>stable</em> le plus vite que possible ! Très bientôt, nous commencerons à publier le journal des modifications !</p><p>:::</p><h3>🧪 Testeurs</h3><p><img src="/img/blog/alpha/manny.jpg"/></p><p>Avec cette nouvelle étape, nous avons décidé de prendre un nouveau départ et de relancer nos inscriptions de testeurs. Veuillez consulter <a href="/docs/signing-up-alpha">Sign Up for Alpha Testing</a> pour plus d&#x27;informations sur la façon de devenir un testeur.</p><p>Si vous êtes déjà un testeur, veuillez nous contacter dans discord afin d&#x27;obtenir une clé Steam. Nous donnerons la priorité aux membres actifs de la communauté !</p><h3>🔮Plans futurs</h3><p>Nous avons également créé une nouvelle page <a href="/docs/roadmap">Roadmap</a> avec tous nos plans et redirigeant vers nos boards officiels de la feuille de route !</p><p>Dans les semaines à venir, nous commencerons progressivement à distribuer des clés Steam et dès que possible, nous publierons la première mise à jour Steam avec beaucoup de nouveau contenu !</p><p>Restez à l&#x27;écoute ! Et merci beaucoup pour tout votre soutien !</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Documentation retravaillée]]></title>
            <link>https://docs.nanos.world/fr/blog/new-docs</link>
            <guid>new-docs</guid>
            <pubDate>Fri, 27 Aug 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Il y a quelque temps, nous avons sorti notre toute nouvelle version de la documentation écrite en Markdown ! Il utilisait les services GitBook dont son hébergement, le saut était grand depuis la version précédente écrite en Sphinx.]]></description>
            <content:encoded><![CDATA[<p><img src="/img/docs/new-docs.png"/></p><p>Il y a quelque temps, nous avons sorti notre toute nouvelle version de la documentation écrite en Markdown ! Il utilisait les services GitBook dont son hébergement, le saut était grand depuis la version précédente écrite en Sphinx.</p><p>Depuis, nous explorons les possibilités du marché, nous avons également testé ReadMe, ReType et MdBook.</p><p>Et puis, enfin, nous avons trouvé Docusaurus ! Une documentation open source qui permet beaucoup de personnalisation, et a même des fonctionnalités intégrées incroyables que nous pouvons utiliser ! Il s&#x27;agit du prochain saut vers le succès!</p><p>Découvrez les principales fonctionnalités ajoutées dans la publication complète !</p><p><img src="https://d33wubrfki0l68.cloudfront.net/ea8e37a6a30e9c260a8936d95c579af4a2dd3df7/6ee7e/img/docusaurus_keytar.svg" alt="Docusaurus"/></p><h2>Fonctionnalités clés</h2><h3>Mode Sombre!</h3><p>Nos yeux vous remercient! Maintenant nous pouvons basculer de mode dans le coin supérieur droit de l&#x27;écran!</p><p><img src="/img/blog/new-docs/dark-mode.jpg"/></p><h3>Meilleure recherche</h3><p>Docusaurus fournit des tonnes de moteurs de recherche à utiliser, nous allons itérer entre tous pour trouver le meilleur !</p><p><img src="/img/blog/new-docs/search.jpg"/></p><h3>Gestion des versions</h3><p><img src="/img/blog/new-docs/versions.jpg"/></p><p>Maintenant notre documentation peut avoir des versions! À l’avance pour certains plans que nous avons à l’esprit, nous serons en mesure d’afficher différentes versions à lire!</p><h3>Multilingue</h3><p>Nous supportons maintenant plusieurs langues ! La traduction est fournie par Crowdin, une solution basée sur le cloud qui rationalise les traductions ! Tout le monde peut collaborer à la traduction des pages, et même des articles de blog!</p><p><img src="/img/blog/new-docs/languages.jpg"/></p><p>Pour cela, veuillez aller sur la page <a href="https://crowdin.com/project/nanos-world-docs">officielle de la documentation nanos world Crowdin</a>, créez un compte et aidez nous à traduire les pages! Nous soutenons actuellement le Portugais, l&#x27;Allemand et le Français, mais nous pouvons en ajouter plus sur demande!</p><p><img src="/img/blog/new-docs/crowdin.jpg"/></p><h3>Page de blog!</h3><p>Vous devez déjà être en train de le lire, mais maintenant nous pouvons avoir une page de blog intégrée! Actualités partout à chaque fois !</p><h3>100% de la personnalisation</h3><p>Nous pouvons intégrer la puissance de React dans Markdown, pour nous permettre de modulariser et d&#x27;automatiser la création de certaines de pages ! Moins d&#x27;efforts pour nous! Nous pouvons aussi créer nos propres composants pour améliorer beaucoup l&#x27;UX!</p><p>Restez à l&#x27;écoute car les prochaines semaines nous allons faire de GROSSES annonces !</p><p>Nous vous invitons à nous faire part de vos commentaires !</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Mise à jour du Sandbox]]></title>
            <link>https://docs.nanos.world/fr/blog/sandbox</link>
            <guid>sandbox</guid>
            <pubDate>Fri, 18 Jun 2021 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<p><img src="/img/blog/updates/sandbox.jpg"/></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Mise à jour du Vault]]></title>
            <link>https://docs.nanos.world/fr/blog/vault</link>
            <guid>vault</guid>
            <pubDate>Sat, 03 Apr 2021 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<p><img src="/img/blog/updates/vault.jpg"/></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Mise à jour de l'eau]]></title>
            <link>https://docs.nanos.world/fr/blog/eau</link>
            <guid>eau</guid>
            <pubDate>Mon, 11 Jan 2021 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<p><img src="/img/blog/updates/water.jpg"/></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Mise à jour des véhicules]]></title>
            <link>https://docs.nanos.world/fr/blog/véhicules</link>
            <guid>véhicules</guid>
            <pubDate>Mon, 21 Dec 2020 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<p><img src="/img/blog/updates/transformers.jpg"/></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Halloween]]></title>
            <link>https://docs.nanos.world/fr/blog/halloween</link>
            <guid>halloween</guid>
            <pubDate>Sat, 24 Oct 2020 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<p><img src="/img/blog/updates/halloween.jpg"/></p>]]></content:encoded>
        </item>
    </channel>
</rss>