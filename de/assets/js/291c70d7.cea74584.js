"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[725],{69574:function(e){e.exports=JSON.parse('{"blogPosts":[{"id":"january-2022","metadata":{"permalink":"/de/blog/january-2022","editUrl":"https://github.com/nanos-world/docs/edit/master/blog/2022-01-09-january.md","source":"@site/i18n/de/docusaurus-plugin-content-blog/2022-01-09-january.md","title":"January: Store & Vault!","description":"Introducing Store, New Classes and all Retroactive Updates!","date":"2022-01-09T00:00:00.000Z","formattedDate":"9. Januar 2022","tags":[{"label":"updates","permalink":"/de/blog/tags/updates"}],"readingTime":9.075,"truncated":false,"authors":[{"name":"Gabriel T. Nardy","title":"nanos world developer (SyedMuhammad)","url":"https://twitter.com/gtnardy","imageURL":"/img/blog/gtnardy.jpg","key":"gtnardy"}],"frontMatter":{"slug":"january-2022","title":"January: Store & Vault!","authors":"gtnardy","tags":["updates"]},"nextItem":{"title":"November: Unreal Engine 5?","permalink":"/de/blog/november-2021"}},"content":"**Introducing Store, New Classes and all Retroactive Updates!**\\n\\nThis blog will also summary up the highlights of everything that has been developed since the last blog in November! Detailed Changelog is available in our [Discord](https://discord.nanos.world)! Stay tuned!\\n\\n\\n## Introducing: Store & Vault!\\n\\n![](/img/blog/january/store-01.jpg)\\n\\nIt is with great joy that we finally announce the long-awaited **Store**! The Store is a marketplace where everyone will be able to upload their Assets, Packages, release new versions, create Teams and much more! 100% integrated with the Vault and the CLI!\\n\\n:::tip\\n\\nThe store development is being headed by **@MegaThorx**! This is the initial version and several updates will come! All feedback is appreciated!\\n\\n:::\\n\\n\\n### Features Highlights\\n\\n* Creation of **Asset Packs** & **Packages** pages, including images and description.\\n\\n![](/img/blog/january/store-03.jpg)\\n\\n* Upload of new **Versions**, with ability to tag as Draft, Beta and Stable.\\n\\n![](/img/blog/january/store-02.jpg)\\n\\n* Create a **Team** and add Team members.\\n\\n![](/img/blog/january/store-05.jpg)\\n\\n* **Tag & Category** system.\\n\\n![](/img/blog/january/store-04.jpg)\\n\\n:::tip\\n\\nCheck out the complete documentation [here](/docs/next/vault-and-store/store).\\n\\n:::\\n\\n**nanos world Store available now on https://store.nanos.world/**\\n\\n\\n### Server Token\\n\\nWith the addition of the Store, we\'ve got a new feature: **Server Token**.\\n\\nThis token is required when downloading any content from the Store using the CLI (and soon\u2122 when using other integration features), you must set it in your [Config.toml](https://docs.nanos.world/docs/next/core-concepts/server-manual/server-configuration#server-configuration-file) file as `token` setting.\\n\\nTo generate a token please refer to https://store.nanos.world/settings/tokens/.\\n\\n\\n## New Class: [Canvas](/docs/next/scripting-reference/classes/canvas)\\n\\n![](/img/blog/january/canvas.jpg)\\n\\nWe\'ve added a new class to completely replace our old **Render** Static Class: **Canvas**! Canvas is like a painting frame, you can draw anything onto it, from Lines, Squares to Materials and Textures!\\n\\nYou can also use it as UI or paint any object with a Canvas using `:SetMaterialFromCanvas()`!\\n\\nNow it\'s way easier to create a basic UI!\\n\\n```lua\\n-- Spawns a Canvas\\nlocal canvas = Canvas(true, Color.TRANSPARENT, 0, true)\\n\\n-- Subscribes for Update, we can only Draw inside this event\\ncanvas:Subscribe(\\"Update\\", function(self, width, height)\\n  -- Draws a Text in the middle of the screen\\n  self:DrawText(\\"Hello World!\\", Vector2D(width / 2, height / 2))\\n\\n  -- Draws a red line Horizontally\\n  self:DrawLine(Vector2D(0, height / 2), Vector2D(width, height / 2), 10, Color.RED)\\nend)\\n```\\n\\nThe [Basic HUD (Canvas) Tutorial](https://docs.nanos.world/docs/next/getting-started/tutorials-and-examples/basic-hud-canvas) has been updated as well!\\n\\n\\n## Steam Input + Controller\\n\\n![](/img/blog/january/controller.jpg)\\n\\nWe\'ve managed to integrate Steam Input. If you are not familiar with that, Steam Input allows you to set up and play with any Controller, and also configure it through Steam Interface.\\n\\nIt is a nice integration because it\'s a relatively simple implementation that allows nanos world to be played with controllers, and it gives users the possibility to customize bindings and share with the community.\\n\\nAn initial version has been released in the latest update, more bindings and configurations will come next.\\n\\n\\n## New built-in Key Glyphs\\n\\n![](/img/blog/january/glyphs.jpg)\\n\\nWe\'ve added a utility method to retrieve a Glyph/Image from a given Key. Just use `Input.GetKeyIcon(key_name)` and it will return the path of the image which can be used as Texture or as an usual image `<img>` in the HTML!\\n\\nYou can use it combined with `Input.GetMappedKey()` to dynamically get the Key Glyph based on the user\'s key binding configuration.\\n\\n\\n## Bullet Trails Improvement\\n\\n<video controls=\\"true\\" allowfullscreen=\\"true\\">\\n    <source src=\\"/videos/blog/january/bullet-trail.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\nWe have reworked our default Bullet Trail particles. Before, depending on the point of view you could see a big sphere passing through and also several glitches in the sky. Now it was reworked to be more realistic and without any artifact!\\n\\n\\n## New Map Configurations\\n\\nNow it is possible to create individual Configuration files for each Map, in which you can define all compatible game-modes, spawn locations and add custom data as well!\\n\\nAlso, it is possible to set up a complete Package which will automatically load when this map is loaded.\\n\\n```toml title=\\"Map.toml\\"\\n# map configurations\\n[map]\\n    # compatible game-modes\\n    compatible_game_modes = [\\n        \\"sandbox\\",\\n        \\"deathmatch\\"\\n    ]\\n\\n    # list of spawn points\\n    spawn_points = [\\n        { location = \\"Vector(100, 200, 100)\\", rotation = \\"Rotator(0, 90, 0)\\" },\\n        { location = \\"Vector(200, 300, 100)\\", rotation = \\"Rotator(0, 90, 0)\\" },\\n    ]\\n\\n[custom_data]\\n    whatever = \\"anything\\"\\n\\n```\\n\\nCheck the complete documentation at [Map Script & Data](https://docs.nanos.world/docs/next/assets-modding/creating-assets/maps-and-levels/map-script-and-data).\\n\\n\\n:::tip\\n\\nThe following changes were added back in **1.1.0-1.3.0** update, we gonna highlight the best ones here!\\n\\n:::\\n\\n## Interactive CLI\\n\\n![](/img/blog/january/interactive-cli.jpg)\\n\\nAn amazing and extremely useful functionality that has been added to the CLI is the creation of Asset Packs & Packages interactively.\\n\\nUse `add [package|assets] NAME` and it will create the Asset Pack or Package interactively, it will create the Configuration and Default files as well!\\n\\n\\n## Actor Tags\\n\\nAt the request of our testers, we implemented a interface to access Unreal\'s Actor Tags, with `Actor.SetActorTag()` and `Actor.GetActorTag()` you can set/get unreal Actor Tags directly from Scripting (client side).\\n\\nActor Tags are just an array of strings which can be accessed from anywhere, including from Unreal Blueprint. This small addition increases the range of possibilities for integration with blueprints and external implementations.\\n\\n\\n## New Class: [SceneCapture](/docs/next/scripting-reference/classes/scene-capture)\\n\\nThis is a very cool feature released back in **1.1.0** update.\\n\\n**SceneCapture** is a Camera Actor which captures the environment in real time, and we can get the outputted result with `:SetMaterialFromSceneCapture()` into any other Actor!\\n\\n<video controls=\\"true\\" allowfullscreen=\\"true\\">\\n    <source src=\\"/videos/blog/january/scene-capture.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\nIt has several configurable performance tweaks which makes it more efficient if you are not looking at the actors and also reduces the capture rate if you are too far!\\n\\n\\n## Assets Caching\\n\\nWe\'ve implemented a great feature which improves the performance and reduce stuttering when (re)loading Assets in runtime. Stuttering usually happen when using HDD and when loading something from Disk. Now every loaded asset (including files from disk - **.ogg** and **.jpg**) is cached and reused when loading again automatically. We still intend to add some options to auto load all assets from all loaded Asset Packs when entering a server and also a scriptable option to async load an Asset prior the use to further improve the stuttering and add more freedom to the scripters.\\n\\n\\n## Light Profiles\\n\\n![](/img/blog/january/light-profile.jpg)\\n\\nWe\'ve added a new cool setting for Lights: **Light Profile**, which allows changing the Light Profile Texture of a Light with [Light:SetTextureLightProfile()](https://docs.nanos.world/docs/next/scripting-reference/classes/light#settexturelightprofile).\\n\\nIt is possible to set to one of our built-in [Light Profiles](https://docs.nanos.world/docs/next/scripting-reference/glossary/enums#lightprofile). All built-in Light Profiles were imported from [IES Light Profile Pack](https://www.unrealengine.com/marketplace/en-US/product/ies-light-profile-pack).\\n\\nThis can add a realistic Flashlight effect to your Lights for example.\\n\\n\\n## Vehicle Improvements\\n\\nNow it is possible to manually control if the Vehicle Engine is started or not, also if it auto starts when a driver gets in with `Vehicle:SetAutoStartEngine()`.\\n\\nAlso we added a small detail: **Taillights**, it gets Red when braking and White when going backwards, it is customizable with `Vehicle:SetTaillightsSetup()`:\\n\\n<video controls=\\"true\\" allowfullscreen=\\"true\\">\\n    <source src=\\"/videos/blog/january/vehicle-taillight.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n:::note\\n\\nThe Vehicle Mesh colors are still not in sync with the Headlights neither the Taillights, this will be improved in the next updates!\\n\\n:::\\n\\n\\n## Parachute Customization\\n\\n![](/img/blog/january/parachute.jpg)\\n\\nWe\'ve added an useful customization to the built-in parachute, now it\'s possible to change it\'s texture with `Character:SetParachuteTexture(texture)`. Also, all built-in Textures can be found at `nanos-world/NanosWorld/Content/NanosWorld/Textures/Parachute/` and used like `assets///nanos-world/Textures/Parachute`.\\n\\n\\n## Community Spotlight\\n\\nOur community has been working hard on several amazing stuff, we would like to share it with you!\\n\\n### T-Drones\\n\\n*by Timmy*\\n\\nTimmy worked on very cool fully functional Drone package, check it out! Fully integrated with the new SceneCapture for a \\"3D Camera System\\". Also the Drone has a function to back to home! Amazing!\\n\\n> T-Drones is a script designed to emulate the behavior of hobby drones, and thought to run on the vast majority of game-modes.\\n> \\n> It has been conceived to be as modular as possible and to adapt to the needs of anyone who wants to make modifications or additions easily. <iframe width=\\"620\\" height=\\"347\\" src=\\"https://www.youtube-nocookie.com/embed/TEzEKiGgDo0?vq=hd1080\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\" allowfullscreen mark=\\"crwd-mark\\"></iframe>\\n\\n\\n### KOTOR RP\\n\\n*by ERO Team (NegativeName, Mougel, False & Tark)*\\n\\nThe ERO Team is working hard on a blasting Star Wars RP game-mode (KOTOR RP), this gonna be dope! Here\'s some screenshots of the worlds and the Combo system of the Light Saber!\\n\\n> Star Wars KOTOR RP is a french role-play game-mode in the Star Wars universe.\\n> \\n> You will play a character in this distant galaxy. Your role will depend on you. Will you join the Sith Empire to enslave the galaxy, protect it by joining the Galactic Republic, or take no side.\\n> \\n> The choice is yours! Become a Jedi, a Sith, a soldier, a mercenary, or a simple merchant.\\n\\n\\n![](/img/blog/january/star-wars-01.jpg)\\n\\n![](/img/blog/january/star-wars-02.jpg)\\n\\n![](/img/blog/january/star-wars-03.jpg)\\n\\n\\n### T-Bomber\\n\\n*by Timmy*\\n\\nAlso Timmy is creating a Bomberman game-mode! Excellent work, I can\'t wait to play it!\\n\\n> T-Bomber is a Bomberman-like game-mode Heavily inspired by the famous maze game.\\n> \\n> It aims to replicate the original Bomberman experience with some extra spice, and to show off some of the scripting possibilities of nanos world.\\n> \\n> The rules are very simple, the last one alive wins!\\n\\n\\n<video controls=\\"true\\" allowfullscreen=\\"true\\">\\n    <source src=\\"/videos/blog/january/timmy-bomberman-01.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n<video controls=\\"true\\" allowfullscreen=\\"true\\">\\n    <source src=\\"/videos/blog/january/timmy-bomberman-03.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n<video controls=\\"true\\" allowfullscreen=\\"true\\">\\n    <source src=\\"/videos/blog/january/timmy-bomberman-02.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n### VZombies\\n\\n*by Voltaism*\\n\\nVoltaism is working on his Zombies game-mode based on COD\'s one. It\'s incredibly fun and horrifying!\\n\\n> Nearly finished game-mode that is basically a clone of the classic Call Of Duty: Zombies mode where you have to survive against zombies the longer as you can!\\n> \\n> This game-mode also has bots that can play with you.\\n\\n![](/img/blog/january/vzombies-01.jpg)\\n\\n![](/img/blog/january/vzombies-02.jpg)\\n\\n\\n### nanos BattleField 2043\\n\\n*by LighterChu, Trevor & MemeFrug*\\n\\n> Battlefield 2042 came out, we expected the best. Why did we make nanos battlefield 2043, well it is not just Battlefield 2042 it\'s all battlefields mixed in the future of combine titles are here.\\n\\n![](/videos/blog/january/battlefield-01.gif)\\n\\n![](/img/blog/january/battlefield-01.jpg)\\n\\n\\n## Conclusion\\n\\nThank you again for your feedback and support, every suggestion and bug found makes the nanos world wheel spin faster and faster!\\n\\n:::note\\n\\nThis blog contained several highlights of our progress in the last month. Note that countless improvements, bug fixes and some other new features are available in the changelog on our [Discord](https://discord.nanos.world) and also in-game.\\n\\n:::\\n\\nWe are aware of your biggest requests and we want to implement them as soon as possible to make the nanos world API more and more complete. We still have a long roadmap to go through, and we have big pillars of goals to bring new types of vehicles (including air and sea), customizable characters (any skeleton), direct Blueprint support and more!\\n\\nRight away we desire to rework our Steam Store Page, it was left behind due to some technical issues and we want to revive it, with that we desire to do a rebranding of the nanos world, we know that logos and great capsule images that relate to the game theme are of great importance for Steam self-marketing to attract new players!\\n\\nSee you in the next! Thank you!"},{"id":"november-2021","metadata":{"permalink":"/de/blog/november-2021","editUrl":"https://github.com/nanos-world/docs/edit/master/blog/2021-12-01-unreal-engine-5.md","source":"@site/i18n/de/docusaurus-plugin-content-blog/2021-12-01-unreal-engine-5.md","title":"November: Unreal Engine 5?","description":"New Classes, Unreal Engine 5 Experiments and Scripting Improvements!","date":"2021-12-01T00:00:00.000Z","formattedDate":"1. Dezember 2021","tags":[{"label":"updates","permalink":"/de/blog/tags/updates"}],"readingTime":6.435,"truncated":false,"authors":[{"name":"Gabriel T. Nardy","title":"nanos world developer (SyedMuhammad)","url":"https://twitter.com/gtnardy","imageURL":"/img/blog/gtnardy.jpg","key":"gtnardy"}],"frontMatter":{"slug":"november-2021","title":"November: Unreal Engine 5?","authors":"gtnardy","tags":["updates"]},"prevItem":{"title":"January: Store & Vault!","permalink":"/de/blog/january-2022"},"nextItem":{"title":"October: Alpha released!","permalink":"/de/blog/alpha-released"}},"content":"New Classes, Unreal Engine 5 Experiments and Scripting Improvements!\\n\\n\\n## New Class: [Decal](/docs/scripting-reference/classes/decal)\\n\\n![](/img/blog/november/decal.jpg)\\n\\nWe\'ve added a new class to spawning **Decals**! Decals are Materials that are projected onto meshes in your level, including Static Meshes and Skeletal Meshes. You can load any `.jpg` from disk during runtime and use it as parameter in your Decal Material!\\n\\nAs Decals are inherited from Actors, you can change it\'s location, rotation, attach it or call any method from [Base Actor](/docs/scripting-reference/classes/base-classes/actor) on it!\\n\\n\\n## New Class: [Billboard](/docs/scripting-reference/classes/billboard)\\n\\n![](/img/blog/november/billboard.jpg)\\n\\nWe\'ve added another new class to spawning **Billboards**! A Billboard is a 2D Material that will be rendered always facing the camera. It\'s possible to use all custom methods from Paintable as well and spawning custom textures on it. You can tweak it\'s material properties with [Base Paintable](/docs/scripting-reference/classes/base-classes/paintable) or even use a material of your own.\\n\\nAs Billboards are inherited from Actors, you can change it\'s location, rotation, attach it or call any method from [Base Actor](/docs/scripting-reference/classes/base-classes/actor) on it!\\n\\n\\n## New Class: [Melee](/docs/scripting-reference/classes/melee)\\n\\n![](/img/blog/november/melee.jpg)\\n\\nWe are getting a brand new very-requested class: **Melee**! The Melee is coming to replace the former **Item** class.\\n\\n**Melee** is a new Class (which works exactly as the old **Item**) but now with ability to attack with it. It is possible to add custom animations, a cooldown and tweak the damage of it. The attack physics is procedurally based on the animation, this means you can stab, slash or even smash things only by changing the animation and then the hit will be based on that!\\n\\nThe results are quite fun, the hit/damage also affects the environment dynamically \ud83d\ude0a\\n\\n<video controls=\\"true\\" allowfullscreen=\\"true\\">\\n    <source src=\\"/videos/blog/november/melee.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n## Scripting Improvements\\n\\nWe\'ve listen to your demand and we\'re finally bringing long-awaited new amazing scripting features!\\n\\n### Real Hot Reload\\n\\n![](/img/blog/november/hotreload.jpg)\\n\\nAfter several requests, we\'ve started implementing a real Hot Reload feature!\\n\\nThe real **Hot Reloading** is an amazing feature which allows you loading new scripting code without needing to lose all the current memory state of your Packages. It works by loading the scripting files over the current running Lua VM.\\n\\nCurrently it works by manually triggering it in the console:\\n\\n```bash\\npackage hotreload [PACKAGE_NAME|all]\\n```\\n\\nThis will update the clients with the newer files version and load the `Index.lua` files from the packages. It will keep the current memory state of the packages as it is. It will also unsubscribe from all registered Events in that package.\\n\\nIn the future, it would be possible to add a real-time checker to automatically update the modified files after saving them.\\n\\n\\n### Extending Classes\\n\\n![](/img/blog/november/extending.jpg)\\n\\nA new cool feature that is being added is Extending and Inheriting nanos world Classes. *This is still experimental and we want to collect your feedback and find remaining bugs.*\\n\\nIt is now possible to **Add new Methods** to nanos world Classes, **Override existing Methods** and even **Override __index and __newindex**.\\n\\nAdding a new method to a class is easy like this:\\n\\n```lua\\n-- Adding a new method \'AddScore\' to Player class\\nfunction Player:AddScore(score)\\n    self:SetValue(\\"score\\", self:GetValue(\\"score\\", 0) + score)\\nend\\n\\n-- Using it\\nmy_player:AddScore(10)\\n```\\n\\nRead the full documentation [here](/docs/core-concepts/scripting/extending-classes).\\n\\n\\n## New View Mode: TopDown\\n\\nWe created a new native View Mode: **TopDown**!\\n\\nThis ViewMode allows you to fully control Characters from a TopDown perspective.\\n\\nWith just a single line:\\n\\n```lua\\nmy_character:SetViewMode(ViewMode.TopDown)\\n```\\n\\nnanos world becomes a completely different game, the mouse is now a crosshair which the Character aims to. Mechanics of picking up Weapons, grabbing Props and interacting with stuff was slightly modified to work with the ViewMode. Also driving is fully supported as well! \ud83e\udd29\\n\\nIt also is possible to dynamically change the view mode and switch between them during game-play and also tweak settings such as camera distance and so on.\\n\\n<video controls=\\"true\\" allowfullscreen=\\"true\\">\\n    <source src=\\"/videos/blog/november/top-down.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n## New Camera Methods\\n\\nPlayer got a bunch of new Camera methods: `Player:SetCameraSocketOffset()`, `Player:SetCameraArmLength()`.\\n\\nAnd also ability to detach and attach it to other actors (\ud83d\udc40 including Props): `Player:AttachCameraTo()` and `Player:ResetCamera()`. It will attach including a Camera SpringArm component!\\n\\nNote: **Spectate** methods from **Client** has been moved to **Player**: `Player:Spectate()`.\\n\\n\\n## [TextRender](/docs/scripting-reference/classes/text-render) on Server Side\\n\\nNow the Class `TextRender` now can be spawned on Server Side as well!\\n\\n\\n## Other Changes\\n\\nBesides the major topics covered here, we\'ve got several other new features which were been added during the month:\\n\\n- Added a new method for Character: `Character:Follow()` which will make the AI follow other actor.\\n- Added a new Utils method: `NanosUtils.Benchmark()` which will take a function as parameter and test the performance of it.\\n- Now `Subscribe` will return the callback function (which can be used to Unsubscribe afterwards).\\n- Fixed tons of bugs, detailed information can be found in the Discord Changelog channel.\\n\\n\\n## Unreal Engine 5\\n\\n![](/img/blog/november/ue5.jpg)\\n\\nLastly, it is already known we have a big objective of porting nanos world to Unreal Engine 5. Personally this is something I wanted to do as soon as possible because Unreal Engine 5 features are amazing, not to mention the publicity and marketing bonuses we would get for nanos world.\\n\\nIn this month, we decided to give a try: we tested porting nanos world to Unreal 5, at first we had some problems because of some Unreal modules have been completely renamed or even removed. And also we got some Unreal methods deprecated by the newer version, so we needed to update them and even reimplement some small stuff.\\n\\nCurrently Unreal Engine 4 uses PhysX physics and in Unreal 5 all the Physics Engine have been replaced by [Unreal\'s Chaos](https://docs.unrealengine.com/5.0/en-US/PhysicsFeatures/ChaosVSPhysxOverview/), which is a new Engine replacing the NVIDIA\'s PhysX.\\n\\nThis made us need to disable Vehicles for this test, as Unreal vehicles are very dependent on the PhysX engine and I would need to reimplement them using the new Chaos API for vehicles (I believe that our Vehicles API will need to change a bit as well once we fully update it).\\n\\nBut after half of dozen adaptions and disabled Vehicles, the results were surprisingly good! nanos world worked on Unreal Engine 5! Personally I got very happy and proud that the biggest problems I had was updating deprecate methods and updating some Unreal modules, thanks to the architecture developed so far in nanos world!\\n\\n\\n### Graphical Results\\n\\nnanos world on Unreal Engine 5 is beautiful, joying with Lumen and Global Illumination is really fun!\\n\\nThere were some graphical artifacts (such as changing the time of day too fast causing a delay/ghosting effect), but I believe they will improve them for the final Unreal Engine 5 version.\\n\\nCheck it out some screenshots taken during the tests trying the Global Illumination and Lumen:\\n\\n![](/img/blog/november/ue5-outside.jpg)\\n\\n![](/img/blog/november/ue5-inside-gas-01.jpg)\\n\\n![](/img/blog/november/ue5-inside-gas-02.jpg)\\n\\n![](/img/blog/november/ue5-inside-flash-01.jpg)\\n\\n![](/img/blog/november/ue5-inside-flash-02.jpg)\\n\\n![](/img/blog/november/ue5-inside-flash-03.jpg)\\n\\n\\n### Stability\\n\\nUnfortunately the stability was extremely bad. It didn\'t surprise me too much as Unreal Engine 5 is on Early Access, so bugs and crashes would happen. Several random crashes occurred during gameplay, I could notice mostly of them were caused by the new Chaos Engine (related to Physics).\\n\\n\\n### What now?\\n\\nI was really happy in being able to port nanos world to Unreal Engine 5, this attempt made us be sure that this would be possible. But I decided that currently is not time yet. During the tests we had several crashes (random ones, related to the low-level of Unreal, mainly coming from Chaos Engine and from Water) that made us conclude that is better to wait a better stable version because it makes nanos world really unplayable. Those random crashes are extremely bad as sometimes it\'s hard to know if it\'s my or Unreal\'s fault.\\n\\nFortunately, with this we could prove ourselves that nanos world will, when the time comes, be compatible and updated to Unreal Engine 5!"},{"id":"alpha-released","metadata":{"permalink":"/de/blog/alpha-released","editUrl":"https://github.com/nanos-world/docs/edit/master/blog/2021-11-03-alpha-released.md","source":"@site/i18n/de/docusaurus-plugin-content-blog/2021-11-03-alpha-released.md","title":"October: Alpha released!","description":"We proudly present...","date":"2021-11-03T00:00:00.000Z","formattedDate":"3. November 2021","tags":[{"label":"updates","permalink":"/de/blog/tags/updates"}],"readingTime":10.955,"truncated":false,"authors":[{"name":"Gabriel T. Nardy","title":"nanos world developer (SyedMuhammad)","url":"https://twitter.com/gtnardy","imageURL":"/img/blog/gtnardy.jpg","key":"gtnardy"}],"frontMatter":{"slug":"alpha-released","title":"October: Alpha released!","authors":"gtnardy","tags":["updates"]},"prevItem":{"title":"November: Unreal Engine 5?","permalink":"/de/blog/november-2021"},"nextItem":{"title":"Weapons Improvements","permalink":"/de/blog/weapons-improvements"}},"content":"![](/img/blog/alpha/alpha-release.jpg)\\n\\nWe proudly present...\\n\\n...The big long list of Alpha updates!\\n\\n\\n## Initial Thoughts\\n\\nThank you everyone for all the support this last month! Our community has grown a lot and it\'s lovely to see how nice and friendly it is becoming \ud83e\udd70!\\n\\nThe Playtest session in the Sunday was amazing! We were able to test the stability of the game very well. I can say that most of the crashes we had were related to external integration issues (WebUI or Unreal itself), which shows a great maturity of our Core system. I think about doing it more often, it was a lot of fun playing Halloween mode and testing the community game-modes!\\n\\nFrom now on, all updates will start to be versioned (finally!), small updates/non break-changes will get a PATCH version and break-changing will get a MINOR version.\\n\\n\\n:::note\\n\\nThe following changelog contains all features since last officially announced release 0.73.0. Many of the next items were already in the bleeding-edge branch.\\n\\n::: <iframe class=\\"steam-widget\\" src=\\"https://store.steampowered.com/widget/1686450/\\" frameborder=\\"0\\" width=\\"620\\" height=\\"190\\" loading=\\"lazy\\" mark=\\"crwd-mark\\"></iframe>\\n\\n\\n## Materials\\n\\n![](/img/blog/alpha/material.jpg)\\n\\nNow nanos world supports Materials Assets! \ud83c\udfa8\\n\\nThis means you can configure your own materials in your Assets.toml and reference them using [Paintable](/docs/scripting-reference/classes/base-classes/paintable) methods!\\n\\nThe function `:SetDefaultMaterial()` has been replaced with `:SetMaterial()`. You can see a list of all built-in Materials read to use [here](/docs/next/assets-modding/default-asset-pack/default-materials).\\n\\nAlso it is now possible to get the WebUI material and set it to any surface (read more below)!\\n\\nSome existing methods are suffering a rework due that, e.g. [Pickables](/docs/scripting-reference/classes/base-classes/pickable) got a new method `:SetCrosshairMaterial()`, so you can set the Crosshair from a Material (and not from a predefined list anymore), also all old Crosshair have been converted into materials which you can find [here](/docs/scripting-reference/classes/base-classes/pickable#list-of-crosshairs-materials-included-in-default-asset-pack).\\n\\n\\n## Improved WebUI\\n\\n![](/img/blog/alpha/webui.jpg)\\n\\nThe [WebUI](/docs/scripting-reference/classes/webui) received several improvements, including the ability to run HTML5 Audio and Videos! \ud83d\udcfd\\n\\n:::caution\\n\\nWe are using a Beta version of Ultralight, which supports Audio and Video, crashes **WILL** happen, also the Audio is currently 2D only. Ultralight is working on a solution so I can implement 3D audio.\\n\\n:::\\n\\nThe **WebUI** constructor received some new parameters: **is_transparent**, **auto_resize**, **width** and **height**. Width and Height will only be used if Auto Resize is **OFF**, this is useful if you want to spawn a WebUI to use as Material to any surface (and don\'t want it to be the size of the screen).\\n\\nAlso it received new methods: [:SetFreeze()](/docs/scripting-reference/classes/webui#setfreeze), [:Resize()](/docs/scripting-reference/classes/webui#resize) and [:SetAutoResize()](/docs/scripting-reference/classes/webui#setautoresize).\\n\\nA new Searcher has been added onto it, improving how it can load your .html files, they are now looked in the following order:\\n1. Relative to `current-file-path/`\\n2. Relative to `current-package/Client/`\\n3. Relative to `current-package/`\\n4. Relative to `Packages/`\\n\\nIt is now possible to spawn a Material from a WebUI, which renders dynamic and automatically into **any** surface: `:SetMaterialFromWebUI()` (method from Actors).\\n\\n\\n## Actors\\n\\nNew additions for [Actors](/docs/scripting-reference/classes/base-classes/actor):\\n\\n* Added new method for all actors: [:SetLifeSpan(time)](/docs/scripting-reference/classes/base-classes/actor#setlifespan) which will automatically destroy this actor after `time` seconds.\\n* Added new method for all actors: [:IsBeingDestroyed()](/docs/scripting-reference/classes/base-classes/actor#isbeingdestroyed) which will return if this actor is being destroyed (useful to check from inside other Events such as `Drop` or `Ungrab`).\\n* Added new parameter for all actors [:AttachTo()](/docs/scripting-reference/classes/base-classes/actor#attachto) method: `lifespan_when_detached`, which will destroy the actor after `time` seconds after it\'s detached.\\n* Now event [TakeDamage](/docs/scripting-reference/classes/base-classes/actor#takedamage) has a new argument: `causer` (the object/actor which caused the damage). Also added new damage types: `RunOverVehicle` and `RunOverProp`.\\n* Now event [Hit](/docs/scripting-reference/classes/base-classes/actor#hit) has new arguments: `impact_force`, `normal_impulse`, `impact_location` and `velocity`.\\n* Now [:SetLocation()](/docs/scripting-reference/classes/base-classes/actor#setlocation) will try to find the better spot to teleport the Actor (to avoid collisions).\\n\\n\\n## Character\\n\\n![](/img/blog/alpha/character.jpg)\\n\\nNew additions for [Characters](/docs/scripting-reference/classes/character):\\n\\n**Character Methods additions/improvements:**\\n* Added several new Getters from it\'s properties.\\n* Added [:SetDamageMultiplier()](/docs/scripting-reference/classes/character#setdamagemultiplier) change the damage multiplier depending on the bone damaged.\\n* Added [:SetHiddenBone()](/docs/scripting-reference/classes/character#sethiddenbone) to make invisible any part of the body.\\n* Added [:SetJumpZVelocity()](/docs/scripting-reference/classes/character#setjumpzvelocity) to make the character jump higher.\\n* Improved [:PlayAnimation()](/docs/scripting-reference/classes/character#playanimation) got new parameters (blend times, loop and play rate), and now it supports loading any type of animation (Montage or Sequence).\\n* Removed `:SetInitialLocation()`, it has been replaced with [:Respawn()](/docs/scripting-reference/classes/character#respawn).\\n\\n**Character Events additions/improvements:**\\n* Added [AttemptEnterVehicle](/docs/scripting-reference/classes/character#attemptentervehicle) called when Character tries to enter a vehicle, returns false to prevent it.\\n* Added [AttemptLeaveVehicle](/docs/scripting-reference/classes/character#attemptleavevehicle) called when Character tries to leave a vehicle, returns false to prevent it.\\n* Added [AttemptReload](/docs/scripting-reference/classes/character#attemptreload) called when Character tries to reload it\'s weapon, returns false to prevent it.\\n* Added [Interact](/docs/scripting-reference/classes/character#interact) called when Characters tries to Pick Up a Pickable or Grab a Prop.\\n* Added [Highlight](/docs/scripting-reference/classes/character#highlight) called when Characters looks at a Prop or Pickable being able to pick up it.\\n\\nSome Characters animations have been renamed from `AM_` to `A_` in the Default Asset Pack (as they are not Montages anymore). Also lots of new Animations have been added.\\n\\n\\n## Weapons\\n\\n![](/img/blog/alpha/weapon.jpg)\\n\\nNew additions for [Weapons](/docs/scripting-reference/classes/weapon):\\n\\n**Weapon Methods additions/improvements:**\\n* Added several new Getters from it\'s properties.\\n* Added [:SetRecoil()](/docs/scripting-reference/classes/weapon#setrecoil) how much the weapon recoils physically.\\n* Added [:SetWallbangSettings()](/docs/scripting-reference/classes/weapon#setwallbangsettings) configure if bullets wallbangs walls.\\n* Added [:SetAnimationFire()](/docs/scripting-reference/classes/weapon#setanimationfire) animation on Weapon Skeletal when firing.\\n* Added [:SetSoundFireLastBullets()](/docs/scripting-reference/classes/weapon#setsoundfirelastbullets) sound when `N` last bullets are remaining in the clip.\\n* Improved [:SetAnimationReload()](/docs/scripting-reference/classes/weapon#setanimationreload) now has `play_rate` parameter.\\n\\n**Additional stuff:**\\n* Now weapons are hidden when Characters are driving.\\n* Added sounds of Shell Dropping & hitting the ground for the built-in Shell particles (this is a procedural and 100% precise sound \ud83d\ude09).\\n* Added sounds when picking up or dropping weapons, also it will slightly throw the weapon to the front when dropping it.\\n\\n\\n## Grenades\\n\\n![](/img/blog/alpha/grenade.jpg)\\n\\nAll Properties from [Grenades](/docs/scripting-reference/classes/grenade) have been deprecated, now access must be done through Methods.\\n\\nWe\'ve added a special Particle for Grenades `nanos-world::P_Grenade_Special` which will explode different particles depending on the ground the grenade is. D.h. will explode a \\"grass explosion\\" particle if grenade is over a grass surface, and a \\"water explosion\\" particle if it\'s under water. **Note:** This particle only works for Grenades.\\n\\n\\n## Sounds\\n\\n![](/img/blog/alpha/sound.jpg)\\n\\nNew additions for [Sounds](/docs/scripting-reference/classes/sound):\\n\\nNow it is possible to load `.ogg` sounds at runtime! You can store them in any Package or Asset Pack and load it using our new pattern for `SpecialPath` (`assets///asset-pack-name/path.ogg` or `package///package-name/path.ogg`).\\n\\nAdded `loop_mode` parameter to constructor (can loop any sound forever now).\\n\\nAlso, it is possible to pass `.ogg` using the SpecialPath in any Sound parameter.\\n\\n**Sound Methods additions/improvements:**\\n* Added [:GetDuration()](/docs/scripting-reference/classes/sound#getduration).\\n* Improved [:FadeIn()](/docs/scripting-reference/classes/sound#fadein) and [:FadeOut()](/docs/scripting-reference/classes/sound#fadeout) parameters.\\n\\n\\n## Input\\n\\n![](/img/blog/alpha/input.jpg)\\n\\nAdded a new class: [Input](/docs/scripting-reference/static-classes/input)!\\n\\nNow you can control, create and customize KeyBindings in a proper way! Example:\\n\\n```lua\\n-- Registers the binding_name \'SpawnMenu\' with default key \'Q\'\\n-- This will add \'SpawnMenu\' to user KeyBinding Settings automatically\\nInput.Register(\\"SpawnMenu\\", \\"Q\\")\\n\\n-- Subscribes for Pressing the key\\nInput.Bind(\\"SpawnMenu\\", InputEvent.Pressed, function()\\n    -- Opens the Spawn Menu\\nend)\\n\\n-- Subscribes for Releasing the key\\nInput.Bind(\\"SpawnMenu\\", InputEvent.Released, function()\\n    -- Closes the Spawn Menu\\nend)\\n```\\n\\n\\n## HTTP\\n\\n![](/img/blog/alpha/http.jpg)\\n\\nAdded a new class: [HTTP](/docs/scripting-reference/static-classes/http)!\\n\\nNow we have a proper standalone class for making HTTP requests. Is also features Async HTTP requests (and thread safe!)\\n\\n\\n## Performance Optimization\\n\\n![](/img/blog/alpha/performance.jpg)\\n\\nWe have worked hard on performance techniques for Alpha update. Here\'s the highlights:\\n\\n* Now Basic Structs [Vector](/docs/scripting-reference/utility-classes/vector) and [Rotator](/docs/scripting-reference/utility-classes/rotator) are automatically compressed when sending through the Network. Reducing it\'s size up to 90% in the best case! This was a great gain for network use.\\n* A new setting was added `Profiling` which you can enable with `--profiling` on server and in Settings on Client. This will log all the time elapsed to run operations/scripting events and some other stuff in the Console.\\n* Now HTTP requests (a.k.a. downloading files when joining a server) are automatically compressed, which may reduce the network usage when downloading big files!\\n* Now Actors which are very far or not on screen will be synchronized/updated half the time to improve performance. We still want to tweak it and make it more aggressive on some cases.\\n* The Assets Loading system have been reworked and is much faster now.\\n* Small [Props](/docs/scripting-reference/classes/prop) (radius < 200) will not collide with players or dynamic objects anymore. Also Bigger props will have CCD disabled by default (which drastically improved performance), this can be enabled in the Prop constructor.\\n* Now VOIP uses Steam system, which provides a great compression and also custom settings through Shift+Tab menu.\\n* Several improvements were made on our low-level Lua code to boost scripting performance.\\n\\n\\n## Server\\n\\nNew additions to [Server](/docs/scripting-reference/static-classes/server) static class:\\n\\n* Added new console command: `map [MAP_NAME]` to change the game map, this will also reload all packages and reconnect all players (like restarting the server).\\n* Added new methods [Server.GetVersion()](/docs/scripting-reference/static-classes/server#getversion), [Server.GetIP()](/docs/scripting-reference/static-classes/server#getip), [Server.GetPort()](/docs/scripting-reference/static-classes/server#getport), [Server.GetQueryPort()](/docs/scripting-reference/static-classes/server#getqueryport) and several missing getters.\\n\\n\\n## Client\\n\\nNew additions to [Client](/docs/scripting-reference/static-classes/client) static class:\\n\\n* New parameters have been added to [Client.SetCameraLocation()](/docs/scripting-reference/static-classes/client#setcameralocation) and [Client.SetCameraRotation()](/docs/scripting-reference/static-classes/client#setcamerarotation) to enable smooth movements with camera in a certain time.\\n* New methods for drawing debug shapes in 3D world: [Client.DrawDebug...()](/docs/scripting-reference/static-classes/client#drawdebug).\\n* Changed [Client.SetHighlight()](/docs/scripting-reference/static-classes/client#sethighlight) parameters, now it takes a Enum to define how the highlight will be.\\n* Added new method [Client.SetSteamRichPresence()](/docs/scripting-reference/static-classes/client#setsteamrichpresence) to customize the message in Steam Friends list.\\n\\nNow when joining a server, a Progress Bar will be displayed in the Taskbar, and also it will Flash once the loading is done:\\n\\n![](/img/blog/alpha/progress-taskbar.jpg)\\n\\n\\n## In-game Console\\n\\nNow it is possible to access Server Console from within the game!\\n\\nIf you open it, 2 tabs will appear: **client** and **server**. You can read all server logs, and also input commands.\\n\\n:::note\\n\\nNot all logs will appear in there, only the ones outputted while you are connected to the server.\\n\\n:::\\n\\n![](/img/blog/alpha/console.jpg)\\n\\n\\n## Timer\\n\\nNew additions to [Timer](/docs/scripting-reference/static-classes/timer):\\n\\n* Added new method: [Timer.Bind(timer_id, actor)](/docs/scripting-reference/static-classes/timer#bind) - this will associate a timer to an actor, when the actor is destroyed, this timer is destroyed too and will never be called.\\n* Added new method: [Timer.IsValid(timer_id)](/docs/scripting-reference/static-classes/timer#isvalid).\\n\\n\\n## CLI\\n\\n* Now it is possible to download multiple Assets/Packages at once with [CLI](/docs/core-concepts/server-manual/nanos-world-cli), just separate them by spaces, e.g.: `cli assets install quaternius city-park`.\\n\\n\\n## Steam Achievements\\n\\n![](/img/blog/alpha/achievements.jpg)\\n\\nWith Steam integration, we are making use of every feature possible it allows \ud83d\ude05!\\n\\nAnd this includes the **Achievements**! We are counting on the support of a talented friend [Esther](https://www.instagram.com/estherhoffmann/) who is drawing the amazing arts for them!\\n\\nLittle by little we will be creating more achievements and releasing them! We also count on your ideas for more!\\n\\n\\n## Scripting Improvements\\n\\n* Added new Searchers to [Package.Require()](/docs/scripting-reference/static-classes/package#require), we now currently support 5 searchers, which are looked in the following order:\\n    1. Relative to `current-file-path/`\\n    2. Relative to `current-package/Client/` or `current-package/Server/` *(depending on your side)*\\n    3. Relative to `current-package/Shared/`\\n    4. Relative to `current-package/`\\n    5. Relative to `Packages/`\\n\\n* [Package.Require()](/docs/scripting-reference/static-classes/package#require) now can be called in runtime and at any moment.\\n* [Package.RequirePackage()](/docs/scripting-reference/static-classes/package#requirepackage) now will load a package as a library inside the current package, it means the package loaded will now be automatically sent to clients, and all paths it loads is relative to the package itself (and not to the one which is requiring it anymore).\\n* Verbose logs will now display the current thread ID.\\n\\n\\n## Renamed Default Packages\\n\\nThe default Packages `NanosWorldWeapons` and `NanosWorldVehicles` were renamed to `nanos-world-weapons` and `nanos-world-vehicles`, following the new correct pattern for Packages and Assets names. Including them now should be made like `Package.RequirePackage(\\"nanos-world-weapons\\")`, the usage keeps the same (`NanosWorldWeapons.AK47()`).\\n\\n\\n## General Changes\\n\\n* [Cable](/docs/scripting-reference/classes/cable) got new methods: `:GetAttachedStartTo()` and `:GetAttachedEndTo()` to get if it\'s attached at any end.\\n* [Player](/docs/scripting-reference/classes/player) got new methods: `:SetVOIPVolume()`, `:GetSteamID()`,\\n* [Pickables](/docs/scripting-reference/classes/base-classes/pickable) got new events: `ReleaseUse`, `PullUse` when Character pulls or releases its usage (i.e. trigger for weapons)\\n* Improved the way the interact trigger enables for [Pickables](/docs/scripting-reference/classes/base-classes/pickable) and [Props](/docs/scripting-reference/classes/prop).\\n* [Trigger](/docs/scripting-reference/classes/trigger) got new method: `:ForceOverlapChecking()` which will checks for overlaps in the game thread and immediately dispatch events.\\n* Added new methods for [Quaternions](/docs/scripting-reference/utility-classes/quaternion) (+, -, Normalize).\\n* Added new method for generating a random [Rotator](/docs/scripting-reference/utility-classes/rotator): `Rotator.Random()`.\\n* Added lots of new Sounds, Animations, Props, Meshes in the Default Asset Pack.\\n* Added Steam Login.\\n* All .config files had it\'s `tabs` replaced with `spaces`.\\n* `.GetPairs()` now only supports `pairs`.\\n* Added Resolutions graphic settings.\\n* Make Day button from In-game menu has been removed.\\n* Added new Splash Effects when Props or objects enter the Water.\\n* `:GetValue()` now has an additional parameter: `fallback` which will be returned if the value doesn\'t exist.\\n* Probably many other things that were being added and were forgotten \ud83d\ude1c.\\n\\n\\n## Bug Fixes\\n\\n* Fixed `World.SetFogDensity()` not working.\\n* Fixed `Client.SetCameraLocation` not working.\\n* Fixed `Actors.RotateTo()` not doing properly math.\\n* Fixed `StaticMesh.GetBounds()` not working.\\n* Fixed Cables methods being able to be called on client side.\\n* Fixed several **Character** properties not syncing.\\n* Fixed a crash when changing Map at runtime.\\n* Fixed Characters not reseting the life to `max_health` when Respawning.\\n* Fixed dead ragdolls still moving around (from `MoveTo()`).\\n* Fixed infinite recursion with `LogEntry` event.\\n* Fixed **Characters** Morph Targets not syncing.\\n* Fixed Discord custom integration not working sometimes.\\n* Fixed a crash when a player had no Steam Profile image.\\n* Fixed Server Announce checkbox being disabled when unchecked on New Game screen.\\n* Fixed a crash when destroying entities from inside `Interact` event.\\n* Fixed hell lot of other Crashes \ud83d\udca5. Thanks for the Crash Reports!"},{"id":"weapons-improvements","metadata":{"permalink":"/de/blog/weapons-improvements","editUrl":"https://github.com/nanos-world/docs/edit/master/blog/2021-10-06-weapons-improvements.md","source":"@site/i18n/de/docusaurus-plugin-content-blog/2021-10-06-weapons-improvements.md","title":"Weapons Improvements","description":"One of our main focus for nanos world is having fun, and we believe that the small details are the big support for the experience to be complete. In the past weeks, we\'ve been working on improving and adding small features to common actions such as firing, picking up objects and even how you perceive them happening. Here\'s the highlights!","date":"2021-10-06T00:00:00.000Z","formattedDate":"6. Oktober 2021","tags":[{"label":"updates","permalink":"/de/blog/tags/updates"}],"readingTime":2.07,"truncated":false,"authors":[{"name":"Gabriel T. Nardy","title":"nanos world developer (SyedMuhammad)","url":"https://twitter.com/gtnardy","imageURL":"/img/blog/gtnardy.jpg","key":"gtnardy"}],"frontMatter":{"slug":"weapons-improvements","title":"Weapons Improvements","authors":"gtnardy","tags":["updates"]},"prevItem":{"title":"October: Alpha released!","permalink":"/de/blog/alpha-released"},"nextItem":{"title":"September: Sandbox Improvements","permalink":"/de/blog/sandbox-improvements"}},"content":"One of our main focus for nanos world is having fun, and we believe that the small details are the big support for the experience to be complete. In the past weeks, we\'ve been working on improving and adding small features to common actions such as firing, picking up objects and even how you perceive them happening. Here\'s the highlights!\\n\\n\\n## New Weapon Animations\\n\\nSince the beginning, our weapons were stiff when shooting giving an impression of rigidity and lack of fluidity. With the simple improvement of adding firing animations to that, look how it looks better:\\n\\n<video controls=\\"true\\" allowfullscreen=\\"true\\">\\n    <source src=\\"/videos/blog/weapons-improvements/m1911.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n<video controls=\\"true\\" allowfullscreen=\\"true\\">\\n    <source src=\\"/videos/blog/weapons-improvements/makarov.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n## New effects for Bullet Shells\\n\\nBesides new animations, we added a subtle detail: **Bullet Shells Drop SFX**. And not that simple! The sound is precisely played in the location and moment the shells hit the ground or any surface, listen:\\n\\n<video controls=\\"true\\" allowfullscreen=\\"true\\">\\n    <source src=\\"/videos/blog/weapons-improvements/bullet-shell-drop.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\nCheck out a complete before and after comparison of some of the weapons, you can notice all the improvements in detail! <iframe width=\\"620\\" height=\\"347\\" src=\\"https://www.youtube-nocookie.com/embed/ln4AUntcyLM\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\" allowfullscreen mark=\\"crwd-mark\\"></iframe>\\n\\n<br />\\n<br />\\n\\nNote that nanos world weapons animations and aiming are completely generated procedurally, that means when you are in First Person, the weapon sight location is calculated dynamically to be positioned right in the middle of your eyes, in a true first person mode.\\n\\n\\n## SFX when Picking Up objects\\n\\nA subtle sound detail added when you grab and drop a Weapon, and also now the object is slightly thrown to forward:\\n\\n<video controls=\\"true\\" allowfullscreen=\\"true\\">\\n    <source src=\\"/videos/blog/weapons-improvements/picking-up.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n## Scopes\\n\\nIs is really easy to add attachable objects in any Weapon, for example attaching a AWP Scope, we use the `SM_Scope_25x56` mesh for that:\\n\\n```lua\\n-- Spawns a AWP Weapon\\nlocal weapon = Weapon(location or Vector(), rotation or Rotator(), \\"nanos-world::SK_AWP\\")\\n\\n-- Attaches a Scope mesh, with configured offset to be perfectly aligned\\nweapon:AddStaticMeshAttached(\\"sight\\", \\"nanos-world::SM_Scope_25x56\\", \\"\\", Vector(20, 0, 11))\\n\\n-- Adjusts Sight Location to put the Sniper at exact location where the scope center will be when ADS\\nweapon:SetSightTransform(Vector(-15, 0, -4.6), Rotator(0, 0, 0))\\n```\\n\\n<video controls=\\"true\\" allowfullscreen=\\"true\\">\\n    <source src=\\"/videos/blog/weapons-improvements/sniper-scope.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\nThis is completely procedural, it also uses the 3D Mesh scope materials!\\n\\n\\n:::tip\\n\\nYou can also check the [Official Weapons Package](https://github.com/nanos-world/nanos-world-weapons), and see how a RedDot has been added to a P90!\\n\\n:::\\n\\nThat\'s it! Thank you all!"},{"id":"sandbox-improvements","metadata":{"permalink":"/de/blog/sandbox-improvements","editUrl":"https://github.com/nanos-world/docs/edit/master/blog/2021-10-01-sandbox-improvements.md","source":"@site/i18n/de/docusaurus-plugin-content-blog/2021-10-01-sandbox-improvements.md","title":"September: Sandbox Improvements","description":"Lot\'s of improvements on Sandbox game-mode has been made in the past month, here\'s the highlights!","date":"2021-10-01T00:00:00.000Z","formattedDate":"1. Oktober 2021","tags":[{"label":"updates","permalink":"/de/blog/tags/updates"}],"readingTime":3.41,"truncated":false,"authors":[{"name":"Gabriel T. Nardy","title":"nanos world developer (SyedMuhammad)","url":"https://twitter.com/gtnardy","imageURL":"/img/blog/gtnardy.jpg","key":"gtnardy"}],"frontMatter":{"slug":"sandbox-improvements","title":"September: Sandbox Improvements","authors":"gtnardy","tags":["updates"]},"prevItem":{"title":"Weapons Improvements","permalink":"/de/blog/weapons-improvements"},"nextItem":{"title":"nanos world is coming to Alpha!","permalink":"/de/blog/alpha"}},"content":"Lot\'s of improvements on Sandbox game-mode has been made in the past month, here\'s the highlights!\\n\\n## Reworked Spawn Menu UI & UX\\n\\nWe thought a lot about how to make the experience of sandbox game-mode even better. And with that we made several improvements, including the addition of categories in the sidebar, new tabs and even new stuff to spawn! Not to mention several bug fixes and the overall usability has been improved! No more movement blocked when opening the Spawn Menu!\\n\\n<video controls=\\"true\\" allowfullscreen=\\"true\\">\\n    <source src=\\"/videos/blog/sandbox-improvements/new-sandbox-ui.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n## New Props \ud83d\udce6\\n\\nWe\'re importing a big pack of props that will come with the base game.\\n\\nWe\'ve been debating a lot what the threshold is between shipping the game with several props or shipping it with no props and just allowing the player to download whatever they want from the Vault. It\'s a tough decision, but for now we\'ve decided to deliver a basic pack with some cool stuff, including new **Construction Props**, **Fruits**, **Tools** and even new **Weapons**!\\n\\n![](/img/blog/sandbox-improvements/new-props.jpg)\\n\\n\\n## NPCs \ud83e\udd16\\n\\nIt\'s been in there for some time, but we\'d like to highlight it! On Spawn Menu now there is a new tab which allows spawning NPCs.\\n\\nThose NPCs has some basic functionality defined in Lua, they walk around randomly and even run away when they are threatened! Insane!\\n\\n<video controls=\\"true\\" allowfullscreen=\\"true\\">\\n    <source src=\\"/videos/blog/sandbox-improvements/npcs.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n## New Weapons  \ud83d\udd2b\\n\\nThis is not strictly related to Sandbox game-mode, but besides the new Props, we are shipping brand new and configured Weapons in the `nanos-world-weapons` default package!\\n\\nThis includes a P90, UMP-45, M1911 Pistol and many other!\\n\\n<video controls=\\"true\\" allowfullscreen=\\"true\\">\\n    <source src=\\"/videos/blog/sandbox-improvements/new-weapons.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n## Weapons Pattern \ud83c\udfa8\\n\\nBesides the categories in the left-side, we are starting to add a new section to be our \\"options section\\", we started by adding a new option in the Weapons tab: **Patterns**.\\n\\n![](/img/blog/sandbox-improvements/weapon-pattern.jpg)\\n\\n![](/img/blog/sandbox-improvements/weapon-pattern-floor.jpg)\\n\\n![](/img/blog/sandbox-improvements/weapon-pattern-infernoo.jpg)\\n\\nYou can change and select any pattern from the hundreds included in the game to be applied in your weapon (it is synchronized with other players as well)! It\'s is really easy to add your own `.jpg` as pattern in the menu!\\n\\n<video controls=\\"true\\" allowfullscreen=\\"true\\">\\n    <source src=\\"/videos/blog/sandbox-improvements/weapons-pattern.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n## Breakable Props \ud83c\udf49\\n\\nThis is an awesome feature which I\'ve been working in the last weeks, it\'s something 100% scripting side, I\'m not sure yet if this should become a built-in thing.\\n\\n<video controls=\\"true\\" allowfullscreen=\\"true\\">\\n    <source src=\\"/videos/blog/sandbox-improvements/breakable-watermelon.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\nBut now on Sandbox we can configure Props to break when Hit or TakeDamage! It is also possible to easily configure which debris will be generated, it\'s randomness and much more, see an example:\\n\\n```lua\\nSetBreakableProp(\\"nanos-world::SM_Fruit_Watermelon_01\\", 700, {\\n    { mesh = \\"nanos-world::SM_Fruit_Watermelon_01_Half_01\\", rotation = Rotator() },\\n    { mesh = \\"nanos-world::SM_Fruit_Watermelon_01_Half_01\\", rotation = Rotator(180, 0, 0) },\\n    { mesh = \\"nanos-world::SM_Fruit_Watermelon_01_Crust_01\\" },\\n    { mesh = \\"nanos-world::SM_Fruit_Watermelon_01_Slice_01\\" },\\n    { mesh = \\"nanos-world::SM_Fruit_Watermelon_01_Slice_01\\" },\\n})\\n```\\n\\nAnd voila every time a Watermelon spawns through the Spawn Menu, it will be breakable!\\n\\n\\n## Explosive Props \ud83d\udca5\\n\\nIn a sub-category as Breakable Props, we can have Explosive ones! Which will not only break if they take damage or get Hit, but will also EXPLODE! Causing damage, and even start a chain reaction of explosions!\\n\\n<video controls=\\"true\\" allowfullscreen=\\"true\\">\\n    <source src=\\"/videos/blog/sandbox-improvements/chain-explosions.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n<video controls=\\"true\\" allowfullscreen=\\"true\\">\\n    <source src=\\"/videos/blog/sandbox-improvements/gas-house-explosion.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n<video controls=\\"true\\" allowfullscreen=\\"true\\">\\n    <source src=\\"/videos/blog/sandbox-improvements/gas-explosion-danger.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\nAs you can see it can be very dangerous to play with fire! \ud83d\ude05\\n\\n\\n## What\'s next! \ud83d\udca1\\n\\nWe are currently working on making everything ready for the official Alpha 1.0.0 release! We are slowly distributing Beta Keys to some testers, this way we can calmly fix some last bugs and give the finishing touches before the full launch!\\n\\nWe\'ve also implemented a LOT of new content for modding & scripting that will still be announced in the next weeks! This will make a HUGE changelog list so probably I will highlight all features in separated Blog News!\\n\\nThat\'s all for this blog! Thank you so much for all your support! \ud83e\udd70\\n\\n<video controls=\\"true\\" allowfullscreen=\\"true\\">\\n    <source src=\\"/videos/blog/sandbox-improvements/watch-teaser.mp4\\" type=\\"video/mp4\\" />\\n</video>"},{"id":"alpha","metadata":{"permalink":"/de/blog/alpha","editUrl":"https://github.com/nanos-world/docs/edit/master/blog/2021-09-01-alpha.md","source":"@site/i18n/de/docusaurus-plugin-content-blog/2021-09-01-alpha.md","title":"nanos world is coming to Alpha!","description":"So long has passed since we started developing nanos world. In late 2017 we started digging about this ambitious idea, we dreamed of creating a seamless open world sandbox gaming experience without the limitations of reverse engineering games such as Just Cause 3 or Grand Theft Auto. So we decided to create a game from scratch, but only in mid 2019 we started working hard, it was really a very enthusiastic idea, but after a lot of blood, love and sweat we are getting there! \ud83e\udd70","date":"2021-09-01T00:00:00.000Z","formattedDate":"1. September 2021","tags":[{"label":"updates","permalink":"/de/blog/tags/updates"}],"readingTime":2.755,"truncated":false,"authors":[{"name":"Gabriel T. Nardy","title":"nanos world developer (SyedMuhammad)","url":"https://twitter.com/gtnardy","imageURL":"/img/blog/gtnardy.jpg","key":"gtnardy"}],"frontMatter":{"slug":"alpha","title":"nanos world is coming to Alpha!","authors":"gtnardy","tags":["updates"]},"prevItem":{"title":"September: Sandbox Improvements","permalink":"/de/blog/sandbox-improvements"},"nextItem":{"title":"\xdcberarbeitete Docs","permalink":"/de/blog/new-docs"}},"content":"![](/img/blog/alpha/alpha-banner.jpg)\\n\\nSo long has passed since we started developing nanos world. In late 2017 we started digging about this ambitious idea, we dreamed of creating a seamless open world sandbox gaming experience without the limitations of reverse engineering games such as Just Cause 3 or Grand Theft Auto. So we decided to create a game from scratch, but only in mid 2019 we started working hard, it was really a very enthusiastic idea, but after a lot of blood, love and sweat we are getting there! \ud83e\udd70\\n\\n## Alpha 1.0.0!\\n\\nAnd we\'re finally reaching the long-awaited Alpha announcement! Lots of things have happened, lots of iterations have been done (and lots will come \ud83d\ude1c) and thanks to all the support from our community and your feedback, we\'re getting closer and closer to releasing nanos world!\\n\\nThe official Alpha 1.0.0 update will come with tons of scripting and gaming news!\\n\\n## Steam!\\n\\n![](/img/blog/alpha/steam-guy.jpg)\\n\\nAlong with the Alpha announcement, we have LOTS of other surprises! As you may have noticed, now [nanos world is on STEAM](https://store.steampowered.com/app/1686450/nanos_world)!!! Itch was very good and helped us a lot at the time, and we will always be grateful that their service and support has always been free! But then we made the decision to take this next step moving to the biggest game platform!\\n\\n:::tip\\n\\n\ud83c\udf8b Please don\'t forget to **WISHLIST** and share [nanos world steam page](https://store.steampowered.com/app/1686450/nanos_world)!\\n\\n::: <iframe class=\\"steam-widget\\" src=\\"https://store.steampowered.com/widget/1686450/\\" frameborder=\\"0\\" width=\\"620\\" height=\\"190\\" loading=\\"lazy\\" mark=\\"crwd-mark\\"></iframe>\\n\\n## New Website!\\n\\n![](/img/blog/alpha/new-website.jpg)\\n\\nWe\'ve created a brand new website which contains a lot of information about nanos world which will help us marketing it! If you didn\'t yet, please take a look at [https://nanos.world](https://nanos.world)!\\n\\n## Lot of news to come!\\n\\nIn the meantime since the last update (0.73.0), we\'ve accumulated **A LOT** of new content for nanos world. Most couldn\'t be released as we were working alongside the Steam integration.\\n\\n### \ud83d\udd22 Versions\\n\\n![](/img/blog/alpha/betas.jpg)\\n\\nWith the arrival of Steam, there will be several changes to how we distribute updates! We will now have two branches `stable/latest` and `bleeding-edge`, we intend to keep the default branch as stable as possible, while working in upcoming content in the *bleeding-edge* branch.\\n\\nBy default all testers will have access to *bleeding-edge* to be able to help us testing the new features before releasing them officially! Also in the docs we are going to have two versions which represent each of the branch!\\n\\n:::info\\n\\nThe version **a1.0.0** is already present in *bleeding-edge* branch and will come to *stable* as soon as possible! Really soon we will start publishing the full changelog of that!\\n\\n:::\\n\\n### \ud83e\uddea Testers\\n\\n![](/img/blog/alpha/manny.jpg)\\n\\nWith this new stage we decided to start fresh and restart our Tester subscriptions. Please check out [Sign Up for Alpha Testing](/docs/signing-up-alpha) for more information on how to become a Tester.\\n\\nIf you already a Tester, please reach us in discord so you can get a Steam key. We will prioritize active members in the community!\\n\\n### \ud83d\udd2e Future plans\\n\\nWe\'ve also created a new [Roadmap](/docs/roadmap) page with all our plans and redirecting to our official Roadmap boards!\\n\\nIn the coming weeks we will gradually start distributing some Steam Keys and as soon we will release the first Steam update with a lot of new content!\\n\\nStay tuned! And thank you so much for all your support!"},{"id":"new-docs","metadata":{"permalink":"/de/blog/new-docs","editUrl":"https://github.com/nanos-world/docs/edit/master/blog/2021-08-27-new-docs.md","source":"@site/i18n/de/docusaurus-plugin-content-blog/2021-08-27-new-docs.md","title":"\xdcberarbeitete Docs","description":"Vor einiger Zeit haben wir unsere brandneue Dokumentations-Version in Markdown ver\xf6ffentlicht! Es benutzte GitBook-Dienste und Hosting, der Sprung war gro\xdf von der vorherigen Version in Sphinx.","date":"2021-08-27T00:00:00.000Z","formattedDate":"27. August 2021","tags":[{"label":"updates","permalink":"/de/blog/tags/updates"}],"readingTime":1.505,"truncated":true,"authors":[{"name":"Gabriel T. Nardy","title":"nanos world developer (SyedMuhammad)","url":"https://twitter.com/gtnardy","imageURL":"/img/blog/gtnardy.jpg","key":"gtnardy"}],"frontMatter":{"slug":"new-docs","title":"\xdcberarbeitete Docs","authors":"gtnardy","tags":["updates"]},"prevItem":{"title":"nanos world is coming to Alpha!","permalink":"/de/blog/alpha"},"nextItem":{"title":"Sandbox-Update","permalink":"/de/blog/sandbox"}},"content":"![](/img/docs/new-docs.png)\\n\\nVor einiger Zeit haben wir unsere brandneue Dokumentations-Version in Markdown ver\xf6ffentlicht! Es benutzte GitBook-Dienste und Hosting, der Sprung war gro\xdf von der vorherigen Version in Sphinx.\\n\\nSeitdem erforschen wir die Marktm\xf6glichkeiten, wir haben auch ReadMe, ReType und MdBook getestet.\\n\\nUnd dann endlich haben wir Docusaurus gefunden! Ein Open Source Doc, der eine Menge Anpassungen erlaubt, und sogar einige erstaunliche eingebaute Funktionen, die wir verwenden k\xf6nnen! Dies ist ein n\xe4chster Sprung zum Erfolg!\\n\\nSchauen Sie sich die Schl\xfcsselfunktionen an, die im vollst\xe4ndigen Beitrag hinzugef\xfcgt wurden!\\n\\n\x3c!--truncate--\x3e\\n\\n![Docusaurus](https://d33wubrfki0l68.cloudfront.net/ea8e37a6a30e9c260a8936d95c579af4a2dd3df7/6ee7e/img/docusaurus_keytar.svg)\\n\\n## Schl\xfcsselfunktionen\\n\\n### Dunkler Modus!\\n\\nVielen Dank! Nun k\xf6nnen wir das Lichtschema in der rechten oberen Ecke des Bildschirms umschalten!\\n\\n![](/img/blog/new-docs/dark-mode.jpg)\\n\\n### Bessere Suche\\n\\nDocusaurus stellt viele verschiedene Suchmaschinen zur Verf\xfcgung, wir werden sie manchmal ver\xe4ndern, um die beste zu finden!\\n\\n![](/img/blog/new-docs/search.jpg)\\n\\n### Versionierung\\n\\n![](/img/blog/new-docs/versions.jpg)\\n\\nJetzt k\xf6nnen unsere Dokumentation verschiedene Versionen haben! Im Vorfeld einiger Pl\xe4ne, die wir im Hinterkopf haben, werden Sie in der Lage sein, verschiedene Versionen anzuzeigen!\\n\\n### Mehrsprachig\\n\\nWir unterst\xfctzen jetzt mehrere Sprachen! Die \xdcbersetzung wird von Crowdin bereitgestellt, einer Cloud-basierten L\xf6sung, die die Lokalisierung vereinfacht! Jeder kann bei der \xdcbersetzung der Seiten und sogar der Blog-Beitr\xe4ge mitarbeiten!\\n\\n![](/img/blog/new-docs/languages.jpg)\\n\\nGehen Sie dazu bitte auf [nanos world official docs Crowdin page](https://crowdin.com/project/nanos-world-docs), erstellen Sie einen Account und helfen Sie uns, die Seiten zu \xfcbersetzen! Wir unterst\xfctzen derzeit Portugiesisch, Deutsch und Franz\xf6sisch, aber mehr k\xf6nnen bei Bedarf hinzugef\xfcgt werden!\\n\\n![](/img/blog/new-docs/crowdin.jpg)\\n\\n### Blog-Seite!\\n\\nSie m\xfcssen es schon lesen, aber wir k\xf6nnen eine eingebaute Blog-Seite haben! Immer wieder Neuigkeiten!\\n\\n### 100% Anpassungsm\xf6glichkeiten\\n\\nWir k\xf6nnen die Kraft von React in Markdown einbetten, so dass wir einige Seitenkreationen modularisieren und automatisieren k\xf6nnen! Weniger Aufwand f\xfcr uns! Auch k\xf6nnen wir unsere eigenen Komponenten verbessern und viel das UX erstellen!\\n\\n\\nBleiben Sie dran, weil wir n\xe4chste Wochen werden wir etwas GRO\xdfES ank\xfcndigen werden!\\n\\nWir freuen uns \xfcber Ihr Feedback!"},{"id":"sandbox","metadata":{"permalink":"/de/blog/sandbox","editUrl":"https://github.com/nanos-world/docs/edit/master/blog/2021-06-18-sandbox.md","source":"@site/i18n/de/docusaurus-plugin-content-blog/2021-06-18-sandbox.md","title":"Sandbox-Update","description":"","date":"2021-06-18T00:00:00.000Z","formattedDate":"18. Juni 2021","tags":[{"label":"updates","permalink":"/de/blog/tags/updates"}],"readingTime":0.005,"truncated":false,"authors":[{"name":"Gabriel T. Nardy","title":"nanos world developer (SyedMuhammad)","url":"https://twitter.com/gtnardy","imageURL":"/img/blog/gtnardy.jpg","key":"gtnardy"}],"frontMatter":{"slug":"sandbox","title":"Sandbox-Update","authors":"gtnardy","tags":["updates"]},"prevItem":{"title":"\xdcberarbeitete Docs","permalink":"/de/blog/new-docs"},"nextItem":{"title":"Tresor-Update","permalink":"/de/blog/tresor"}},"content":"![](/img/blog/updates/sandbox.jpg)"},{"id":"tresor","metadata":{"permalink":"/de/blog/tresor","editUrl":"https://github.com/nanos-world/docs/edit/master/blog/2021-04-03-vault-update.md","source":"@site/i18n/de/docusaurus-plugin-content-blog/2021-04-03-vault-update.md","title":"Tresor-Update","description":"","date":"2021-04-03T00:00:00.000Z","formattedDate":"3. April 2021","tags":[{"label":"updates","permalink":"/de/blog/tags/updates"}],"readingTime":0.005,"truncated":false,"authors":[{"name":"Gabriel T. Nardy","title":"nanos world developer (SyedMuhammad)","url":"https://twitter.com/gtnardy","imageURL":"/img/blog/gtnardy.jpg","key":"gtnardy"}],"frontMatter":{"slug":"tresor","title":"Tresor-Update","authors":"gtnardy","tags":["updates"]},"prevItem":{"title":"Sandbox-Update","permalink":"/de/blog/sandbox"},"nextItem":{"title":"Wasser-Update","permalink":"/de/blog/wasser"}},"content":"![](/img/blog/updates/vault.jpg)"},{"id":"wasser","metadata":{"permalink":"/de/blog/wasser","editUrl":"https://github.com/nanos-world/docs/edit/master/blog/2021-01-11-water-update.md","source":"@site/i18n/de/docusaurus-plugin-content-blog/2021-01-11-water-update.md","title":"Wasser-Update","description":"","date":"2021-01-11T00:00:00.000Z","formattedDate":"11. Januar 2021","tags":[{"label":"updates","permalink":"/de/blog/tags/updates"}],"readingTime":0.005,"truncated":false,"authors":[{"name":"Gabriel T. Nardy","title":"nanos world developer (SyedMuhammad)","url":"https://twitter.com/gtnardy","imageURL":"/img/blog/gtnardy.jpg","key":"gtnardy"}],"frontMatter":{"slug":"wasser","title":"Wasser-Update","authors":"gtnardy","tags":["updates"]},"prevItem":{"title":"Tresor-Update","permalink":"/de/blog/tresor"},"nextItem":{"title":"Fahrzeug-Update","permalink":"/de/blog/fahrzeuge"}},"content":"![](/img/blog/updates/water.jpg)"},{"id":"fahrzeuge","metadata":{"permalink":"/de/blog/fahrzeuge","editUrl":"https://github.com/nanos-world/docs/edit/master/blog/2020-12-21-vehicles-update.md","source":"@site/i18n/de/docusaurus-plugin-content-blog/2020-12-21-vehicles-update.md","title":"Fahrzeug-Update","description":"","date":"2020-12-21T00:00:00.000Z","formattedDate":"21. Dezember 2020","tags":[{"label":"updates","permalink":"/de/blog/tags/updates"}],"readingTime":0.005,"truncated":false,"authors":[{"name":"Gabriel T. Nardy","title":"nanos world developer (SyedMuhammad)","url":"https://twitter.com/gtnardy","imageURL":"/img/blog/gtnardy.jpg","key":"gtnardy"}],"frontMatter":{"slug":"fahrzeuge","title":"Fahrzeug-Update","authors":"gtnardy","tags":["updates"]},"prevItem":{"title":"Wasser-Update","permalink":"/de/blog/wasser"},"nextItem":{"title":"Halloween","permalink":"/de/blog/halloween"}},"content":"![](/img/blog/updates/transformers.jpg)"},{"id":"halloween","metadata":{"permalink":"/de/blog/halloween","editUrl":"https://github.com/nanos-world/docs/edit/master/blog/2020-10-24-halloween.md","source":"@site/i18n/de/docusaurus-plugin-content-blog/2020-10-24-halloween.md","title":"Halloween","description":"","date":"2020-10-24T00:00:00.000Z","formattedDate":"24. Oktober 2020","tags":[{"label":"updates","permalink":"/de/blog/tags/updates"}],"readingTime":0.005,"truncated":false,"authors":[{"name":"Gabriel T. Nardy","title":"nanos world developer (SyedMuhammad)","url":"https://twitter.com/gtnardy","imageURL":"/img/blog/gtnardy.jpg","key":"gtnardy"}],"frontMatter":{"slug":"halloween","title":"Halloween","authors":"gtnardy","tags":["updates"]},"prevItem":{"title":"Fahrzeug-Update","permalink":"/de/blog/fahrzeuge"}},"content":"![](/img/blog/updates/halloween.jpg)"}]}')}}]);